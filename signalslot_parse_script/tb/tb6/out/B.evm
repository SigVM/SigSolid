    /* "signaltest_afterparse.sol":1293:2422  contract B {... */
  mstore(0x40, 0x80)
    /* "signaltest_afterparse.sol":2377:2420  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "signaltest_afterparse.sol":2402:2416  priceReceive() */
  tag_4
    /* "signaltest_afterparse.sol":2402:2414  priceReceive */
  shl(0x20, tag_5)
    /* "signaltest_afterparse.sol":2402:2416  priceReceive() */
  0x20
  shr
  jump	// in
tag_4:
    /* "signaltest_afterparse.sol":1293:2422  contract B {... */
  jump(tag_6)
    /* "signaltest_afterparse.sol":1529:1758  function priceReceive() public{... */
tag_5:
    /* "signaltest_afterparse.sol":1588:1627  keccak256("priceReceive_func(bytes32)") */
  mload(0x40)
  dup1
  dup1
  0x7072696365526563656976655f66756e63286279746573333229000000000000
  dup2
  mstore
  pop
  0x1a
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "signaltest_afterparse.sol":1569:1585  priceReceive_key */
  0x04
    /* "signaltest_afterparse.sol":1569:1627  priceReceive_key = keccak256("priceReceive_func(bytes32)") */
  dup2
  swap1
  sstore
  pop
    /* "signaltest_afterparse.sol":1716:1737  priceReceive_key_slot */
  0x04
    /* "signaltest_afterparse.sol":1710:1738  sload(priceReceive_key_slot) */
  sload
    /* "signaltest_afterparse.sol":1708:1709  2 */
  0x02
    /* "signaltest_afterparse.sol":1706:1707  1 */
  0x01
    /* "signaltest_afterparse.sol":1703:1705  32 */
  0x20
    /* "signaltest_afterparse.sol":1692:1739  createslot(32,1,2,sload(priceReceive_key_slot)) */
  createslot
    /* "signaltest_afterparse.sol":1667:1691  priceReceive_status_slot */
  0x02
    /* "signaltest_afterparse.sol":1660:1740  sstore(priceReceive_status_slot,createslot(32,1,2,sload(priceReceive_key_slot))) */
  sstore
    /* "signaltest_afterparse.sol":1646:1750  {... */
  jump	// out
    /* "signaltest_afterparse.sol":1293:2422  contract B {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "signaltest_afterparse.sol":1293:2422  contract B {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x68c0b038
      gt
      tag_12
      jumpi
      dup1
      0x68c0b038
      eq
      tag_7
      jumpi
      dup1
      0x81b28b60
      eq
      tag_8
      jumpi
      dup1
      0x81daf21f
      eq
      tag_9
      jumpi
      dup1
      0xb6675486
      eq
      tag_10
      jumpi
      dup1
      0xfd0bf5a3
      eq
      tag_11
      jumpi
      jump(tag_2)
    tag_12:
      dup1
      0x0cd2542e
      eq
      tag_3
      jumpi
      dup1
      0x165035e2
      eq
      tag_4
      jumpi
      dup1
      0x25528630
      eq
      tag_5
      jumpi
      dup1
      0x395f9b8d
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "signaltest_afterparse.sol":1427:1462  bytes32 public priceReceive_codePtr */
    tag_3:
      tag_13
      tag_14
      jump	// in
    tag_13:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":1349:1384  uint public constant ONE_HOUR = 180 */
    tag_4:
      tag_15
      tag_16
      jump	// in
    tag_15:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":1390:1421  uint public priceReceive_status */
    tag_5:
      tag_17
      tag_18
      jump	// in
    tag_17:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":1863:2115  function bindfunc() public view {... */
    tag_6:
      tag_19
      tag_20
      jump	// in
    tag_19:
      stop
        /* "signaltest_afterparse.sol":1315:1343  bytes32 public LocalPriceSum */
    tag_7:
      tag_21
      tag_22
      jump	// in
    tag_21:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":2120:2375  function detachfunc() public view {... */
    tag_8:
      tag_23
      tag_24
      jump	// in
    tag_23:
      stop
        /* "signaltest_afterparse.sol":1763:1861  function priceReceive_func(bytes32 obj) public{... */
    tag_9:
      tag_25
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_26
      jumpi
      0x00
      dup1
      revert
    tag_26:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_27
      jump	// in
    tag_25:
      stop
        /* "signaltest_afterparse.sol":1529:1758  function priceReceive() public{... */
    tag_10:
      tag_28
      tag_29
      jump	// in
    tag_28:
      stop
        /* "signaltest_afterparse.sol":1492:1523  bytes32 public priceReceive_key */
    tag_11:
      tag_30
      tag_31
      jump	// in
    tag_30:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":1427:1462  bytes32 public priceReceive_codePtr */
    tag_14:
      sload(0x03)
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":1349:1384  uint public constant ONE_HOUR = 180 */
    tag_16:
        /* "signaltest_afterparse.sol":1381:1384  180 */
      0xb4
        /* "signaltest_afterparse.sol":1349:1384  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":1390:1421  uint public priceReceive_status */
    tag_18:
      sload(0x02)
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":1863:2115  function bindfunc() public view {... */
    tag_20:
        /* "signaltest_afterparse.sol":1899:1918  address dut_address */
      0x00
        /* "signaltest_afterparse.sol":1929:1932  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":1899:1933  address dut_address = address(dut) */
      swap1
      pop
        /* "signaltest_afterparse.sol":1937:1968  bytes32 dut_priceFeedUpdate_key */
      0x00
        /* "signaltest_afterparse.sol":1971:1974  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":1971:1998  dut.get_priceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xbab3affe
        /* "signaltest_afterparse.sol":1971:2000  dut.get_priceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_33
      jumpi
      0x00
      dup1
      revert
    tag_33:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_35
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_35:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_36
      jumpi
      0x00
      dup1
      revert
    tag_36:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "signaltest_afterparse.sol":1937:2000  bytes32 dut_priceFeedUpdate_key = dut.get_priceFeedUpdate_key() */
      swap1
      pop
        /* "signaltest_afterparse.sol":2080:2101  priceReceive_key_slot */
      0x04
        /* "signaltest_afterparse.sol":2074:2102  sload(priceReceive_key_slot) */
      sload
        /* "signaltest_afterparse.sol":2050:2073  dut_priceFeedUpdate_key */
      dup2
        /* "signaltest_afterparse.sol":2038:2049  dut_address */
      dup4
        /* "signaltest_afterparse.sol":2030:2103  bindsig(dut_address,dut_priceFeedUpdate_key,sload(priceReceive_key_slot)) */
      bindsig
        /* "signaltest_afterparse.sol":2025:2029  0x40 */
      0x40
        /* "signaltest_afterparse.sol":2018:2104  mstore(0x40,bindsig(dut_address,dut_priceFeedUpdate_key,sload(priceReceive_key_slot))) */
      mstore
        /* "signaltest_afterparse.sol":2013:2111  {... */
      pop
      pop
      jump	// out
        /* "signaltest_afterparse.sol":1315:1343  bytes32 public LocalPriceSum */
    tag_22:
      sload(0x01)
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":2120:2375  function detachfunc() public view {... */
    tag_24:
        /* "signaltest_afterparse.sol":2158:2189  bytes32 dut_priceFeedUpdate_key */
      0x00
        /* "signaltest_afterparse.sol":2192:2195  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":2192:2219  dut.get_priceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xbab3affe
        /* "signaltest_afterparse.sol":2192:2221  dut.get_priceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_38
      jumpi
      0x00
      dup1
      revert
    tag_38:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_40
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_40:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_41
      jumpi
      0x00
      dup1
      revert
    tag_41:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "signaltest_afterparse.sol":2158:2221  bytes32 dut_priceFeedUpdate_key = dut.get_priceFeedUpdate_key() */
      swap1
      pop
        /* "signaltest_afterparse.sol":2225:2244  address dut_address */
      0x00
        /* "signaltest_afterparse.sol":2255:2258  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":2225:2259  address dut_address = address(dut) */
      swap1
      pop
        /* "signaltest_afterparse.sol":2340:2361  priceReceive_key_slot */
      0x04
        /* "signaltest_afterparse.sol":2334:2362  sload(priceReceive_key_slot) */
      sload
        /* "signaltest_afterparse.sol":2310:2333  dut_priceFeedUpdate_key */
      dup3
        /* "signaltest_afterparse.sol":2298:2309  dut_address */
      dup3
        /* "signaltest_afterparse.sol":2288:2363  detachsig(dut_address,dut_priceFeedUpdate_key,sload(priceReceive_key_slot)) */
      detachsig
        /* "signaltest_afterparse.sol":2283:2287  0x40 */
      0x40
        /* "signaltest_afterparse.sol":2276:2364  mstore(0x40,detachsig(dut_address,dut_priceFeedUpdate_key,sload(priceReceive_key_slot))) */
      mstore
        /* "signaltest_afterparse.sol":2271:2368  {... */
      pop
      pop
      jump	// out
        /* "signaltest_afterparse.sol":1763:1861  function priceReceive_func(bytes32 obj) public{... */
    tag_27:
        /* "signaltest_afterparse.sol":1851:1854  obj */
      dup1
        /* "signaltest_afterparse.sol":1835:1848  LocalPriceSum */
      sload(0x01)
        /* "signaltest_afterparse.sol":1835:1854  LocalPriceSum | obj */
      or
        /* "signaltest_afterparse.sol":1819:1832  LocalPriceSum */
      0x01
        /* "signaltest_afterparse.sol":1819:1854  LocalPriceSum = LocalPriceSum | obj */
      dup2
      swap1
      sstore
      pop
        /* "signaltest_afterparse.sol":1763:1861  function priceReceive_func(bytes32 obj) public{... */
      pop
      jump	// out
        /* "signaltest_afterparse.sol":1529:1758  function priceReceive() public{... */
    tag_29:
        /* "signaltest_afterparse.sol":1588:1627  keccak256("priceReceive_func(bytes32)") */
      mload(0x40)
      dup1
      dup1
      0x7072696365526563656976655f66756e63286279746573333229000000000000
      dup2
      mstore
      pop
      0x1a
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "signaltest_afterparse.sol":1569:1585  priceReceive_key */
      0x04
        /* "signaltest_afterparse.sol":1569:1627  priceReceive_key = keccak256("priceReceive_func(bytes32)") */
      dup2
      swap1
      sstore
      pop
        /* "signaltest_afterparse.sol":1716:1737  priceReceive_key_slot */
      0x04
        /* "signaltest_afterparse.sol":1710:1738  sload(priceReceive_key_slot) */
      sload
        /* "signaltest_afterparse.sol":1708:1709  2 */
      0x02
        /* "signaltest_afterparse.sol":1706:1707  1 */
      0x01
        /* "signaltest_afterparse.sol":1703:1705  32 */
      0x20
        /* "signaltest_afterparse.sol":1692:1739  createslot(32,1,2,sload(priceReceive_key_slot)) */
      createslot
        /* "signaltest_afterparse.sol":1667:1691  priceReceive_status_slot */
      0x02
        /* "signaltest_afterparse.sol":1660:1740  sstore(priceReceive_status_slot,createslot(32,1,2,sload(priceReceive_key_slot))) */
      sstore
        /* "signaltest_afterparse.sol":1646:1750  {... */
      jump	// out
        /* "signaltest_afterparse.sol":1492:1523  bytes32 public priceReceive_key */
    tag_31:
      sload(0x04)
      dup2
      jump	// out

    auxdata: 0xa2646970667358221220356d7daa8d2adbee6c9c307ce324e7c9899989433ab2f8a5604f82b0da36da8964736f6c63782c302e362e31312d646576656c6f702e323032302e372e31342b636f6d6d69742e63333731353564362e6d6f64005d
}
