    /* "signaltest_afterparse.sol":1484:2553  contract B {... */
  mstore(0x40, 0x80)
    /* "signaltest_afterparse.sol":2508:2551  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "signaltest_afterparse.sol":2533:2547  priceReceive() */
  tag_4
    /* "signaltest_afterparse.sol":2533:2545  priceReceive */
  shl(0x20, tag_5)
    /* "signaltest_afterparse.sol":2533:2547  priceReceive() */
  0x20
  shr
  jump	// in
tag_4:
    /* "signaltest_afterparse.sol":1484:2553  contract B {... */
  jump(tag_6)
    /* "signaltest_afterparse.sol":1655:1889  function priceReceive() public{... */
tag_5:
    /* "signaltest_afterparse.sol":1714:1753  keccak256("priceReceive_func(bytes32)") */
  mload(0x40)
  dup1
  dup1
  0x7072696365526563656976655f66756e63286279746573333229000000000000
  dup2
  mstore
  pop
  0x1a
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "signaltest_afterparse.sol":1695:1711  priceReceive_key */
  0x03
    /* "signaltest_afterparse.sol":1695:1753  priceReceive_key = keccak256("priceReceive_func(bytes32)") */
  dup2
  swap1
  sstore
  pop
    /* "signaltest_afterparse.sol":1847:1868  priceReceive_key_slot */
  0x03
    /* "signaltest_afterparse.sol":1841:1869  sload(priceReceive_key_slot) */
  sload
    /* "signaltest_afterparse.sol":1835:1840  30000 */
  0x7530
    /* "signaltest_afterparse.sol":1832:1834  10 */
  0x0a
    /* "signaltest_afterparse.sol":1829:1831  32 */
  0x20
    /* "signaltest_afterparse.sol":1818:1870  createslot(32,10,30000,sload(priceReceive_key_slot)) */
  createslot
    /* "signaltest_afterparse.sol":1793:1817  priceReceive_status_slot */
  0x02
    /* "signaltest_afterparse.sol":1786:1871  sstore(priceReceive_status_slot,createslot(32,10,30000,sload(priceReceive_key_slot))) */
  sstore
    /* "signaltest_afterparse.sol":1772:1881  {... */
  jump	// out
    /* "signaltest_afterparse.sol":1484:2553  contract B {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "signaltest_afterparse.sol":1484:2553  contract B {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x81b28b60
      gt
      tag_11
      jumpi
      dup1
      0x81b28b60
      eq
      tag_7
      jumpi
      dup1
      0x81daf21f
      eq
      tag_8
      jumpi
      dup1
      0xb6675486
      eq
      tag_9
      jumpi
      dup1
      0xfd0bf5a3
      eq
      tag_10
      jumpi
      jump(tag_2)
    tag_11:
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x25528630
      eq
      tag_4
      jumpi
      dup1
      0x395f9b8d
      eq
      tag_5
      jumpi
      dup1
      0x68c0b038
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "signaltest_afterparse.sol":1540:1575  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_12
      tag_13
      jump	// in
    tag_12:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":1581:1612  uint public priceReceive_status */
    tag_4:
      tag_14
      tag_15
      jump	// in
    tag_14:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":1994:2246  function bindfunc() public view {... */
    tag_5:
      tag_16
      tag_17
      jump	// in
    tag_16:
      stop
        /* "signaltest_afterparse.sol":1506:1534  bytes32 public LocalPriceSum */
    tag_6:
      tag_18
      tag_19
      jump	// in
    tag_18:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":2251:2506  function detachfunc() public view {... */
    tag_7:
      tag_20
      tag_21
      jump	// in
    tag_20:
      stop
        /* "signaltest_afterparse.sol":1894:1992  function priceReceive_func(bytes32 obj) public{... */
    tag_8:
      tag_22
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_23
      jumpi
      0x00
      dup1
      revert
    tag_23:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_24
      jump	// in
    tag_22:
      stop
        /* "signaltest_afterparse.sol":1655:1889  function priceReceive() public{... */
    tag_9:
      tag_25
      tag_26
      jump	// in
    tag_25:
      stop
        /* "signaltest_afterparse.sol":1618:1649  bytes32 public priceReceive_key */
    tag_10:
      tag_27
      tag_28
      jump	// in
    tag_27:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":1540:1575  uint public constant ONE_HOUR = 180 */
    tag_13:
        /* "signaltest_afterparse.sol":1572:1575  180 */
      0xb4
        /* "signaltest_afterparse.sol":1540:1575  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":1581:1612  uint public priceReceive_status */
    tag_15:
      sload(0x02)
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":1994:2246  function bindfunc() public view {... */
    tag_17:
        /* "signaltest_afterparse.sol":2030:2049  address dut_address */
      0x00
        /* "signaltest_afterparse.sol":2060:2063  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":2030:2064  address dut_address = address(dut) */
      swap1
      pop
        /* "signaltest_afterparse.sol":2068:2099  bytes32 dut_priceFeedUpdate_key */
      0x00
        /* "signaltest_afterparse.sol":2102:2105  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":2102:2129  dut.get_priceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xbab3affe
        /* "signaltest_afterparse.sol":2102:2131  dut.get_priceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_30
      jumpi
      0x00
      dup1
      revert
    tag_30:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_32
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_32:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_33
      jumpi
      0x00
      dup1
      revert
    tag_33:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "signaltest_afterparse.sol":2068:2131  bytes32 dut_priceFeedUpdate_key = dut.get_priceFeedUpdate_key() */
      swap1
      pop
        /* "signaltest_afterparse.sol":2211:2232  priceReceive_key_slot */
      0x03
        /* "signaltest_afterparse.sol":2205:2233  sload(priceReceive_key_slot) */
      sload
        /* "signaltest_afterparse.sol":2181:2204  dut_priceFeedUpdate_key */
      dup2
        /* "signaltest_afterparse.sol":2169:2180  dut_address */
      dup4
        /* "signaltest_afterparse.sol":2161:2234  bindsig(dut_address,dut_priceFeedUpdate_key,sload(priceReceive_key_slot)) */
      bindsig
        /* "signaltest_afterparse.sol":2156:2160  0x40 */
      0x40
        /* "signaltest_afterparse.sol":2149:2235  mstore(0x40,bindsig(dut_address,dut_priceFeedUpdate_key,sload(priceReceive_key_slot))) */
      mstore
        /* "signaltest_afterparse.sol":2144:2242  {... */
      pop
      pop
      jump	// out
        /* "signaltest_afterparse.sol":1506:1534  bytes32 public LocalPriceSum */
    tag_19:
      sload(0x01)
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":2251:2506  function detachfunc() public view {... */
    tag_21:
        /* "signaltest_afterparse.sol":2289:2320  bytes32 dut_priceFeedUpdate_key */
      0x00
        /* "signaltest_afterparse.sol":2323:2326  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":2323:2350  dut.get_priceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xbab3affe
        /* "signaltest_afterparse.sol":2323:2352  dut.get_priceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_35
      jumpi
      0x00
      dup1
      revert
    tag_35:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_37
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_37:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_38
      jumpi
      0x00
      dup1
      revert
    tag_38:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "signaltest_afterparse.sol":2289:2352  bytes32 dut_priceFeedUpdate_key = dut.get_priceFeedUpdate_key() */
      swap1
      pop
        /* "signaltest_afterparse.sol":2356:2375  address dut_address */
      0x00
        /* "signaltest_afterparse.sol":2386:2389  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":2356:2390  address dut_address = address(dut) */
      swap1
      pop
        /* "signaltest_afterparse.sol":2471:2492  priceReceive_key_slot */
      0x03
        /* "signaltest_afterparse.sol":2465:2493  sload(priceReceive_key_slot) */
      sload
        /* "signaltest_afterparse.sol":2441:2464  dut_priceFeedUpdate_key */
      dup3
        /* "signaltest_afterparse.sol":2429:2440  dut_address */
      dup3
        /* "signaltest_afterparse.sol":2419:2494  detachsig(dut_address,dut_priceFeedUpdate_key,sload(priceReceive_key_slot)) */
      detachsig
        /* "signaltest_afterparse.sol":2414:2418  0x40 */
      0x40
        /* "signaltest_afterparse.sol":2407:2495  mstore(0x40,detachsig(dut_address,dut_priceFeedUpdate_key,sload(priceReceive_key_slot))) */
      mstore
        /* "signaltest_afterparse.sol":2402:2499  {... */
      pop
      pop
      jump	// out
        /* "signaltest_afterparse.sol":1894:1992  function priceReceive_func(bytes32 obj) public{... */
    tag_24:
        /* "signaltest_afterparse.sol":1982:1985  obj */
      dup1
        /* "signaltest_afterparse.sol":1966:1979  LocalPriceSum */
      sload(0x01)
        /* "signaltest_afterparse.sol":1966:1985  LocalPriceSum | obj */
      or
        /* "signaltest_afterparse.sol":1950:1963  LocalPriceSum */
      0x01
        /* "signaltest_afterparse.sol":1950:1985  LocalPriceSum = LocalPriceSum | obj */
      dup2
      swap1
      sstore
      pop
        /* "signaltest_afterparse.sol":1894:1992  function priceReceive_func(bytes32 obj) public{... */
      pop
      jump	// out
        /* "signaltest_afterparse.sol":1655:1889  function priceReceive() public{... */
    tag_26:
        /* "signaltest_afterparse.sol":1714:1753  keccak256("priceReceive_func(bytes32)") */
      mload(0x40)
      dup1
      dup1
      0x7072696365526563656976655f66756e63286279746573333229000000000000
      dup2
      mstore
      pop
      0x1a
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "signaltest_afterparse.sol":1695:1711  priceReceive_key */
      0x03
        /* "signaltest_afterparse.sol":1695:1753  priceReceive_key = keccak256("priceReceive_func(bytes32)") */
      dup2
      swap1
      sstore
      pop
        /* "signaltest_afterparse.sol":1847:1868  priceReceive_key_slot */
      0x03
        /* "signaltest_afterparse.sol":1841:1869  sload(priceReceive_key_slot) */
      sload
        /* "signaltest_afterparse.sol":1835:1840  30000 */
      0x7530
        /* "signaltest_afterparse.sol":1832:1834  10 */
      0x0a
        /* "signaltest_afterparse.sol":1829:1831  32 */
      0x20
        /* "signaltest_afterparse.sol":1818:1870  createslot(32,10,30000,sload(priceReceive_key_slot)) */
      createslot
        /* "signaltest_afterparse.sol":1793:1817  priceReceive_status_slot */
      0x02
        /* "signaltest_afterparse.sol":1786:1871  sstore(priceReceive_status_slot,createslot(32,10,30000,sload(priceReceive_key_slot))) */
      sstore
        /* "signaltest_afterparse.sol":1772:1881  {... */
      jump	// out
        /* "signaltest_afterparse.sol":1618:1649  bytes32 public priceReceive_key */
    tag_28:
      sload(0x03)
      dup2
      jump	// out

    auxdata: 0xa26469706673582212205afa6443c1e0af82b9ea93ac9c4c3435e16624a03c67493381e81fca88b7c61c64736f6c637828302e362e31312d646576656c6f702e323032302e372e31382b636f6d6d69742e63663038346332330059
}
