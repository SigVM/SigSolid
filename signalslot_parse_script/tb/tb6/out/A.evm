    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":24:1489  contract A {... */
  mstore(0x40, 0x80)
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1441:1487  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1467:1484  priceFeedUpdate() */
  tag_4
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1467:1482  priceFeedUpdate */
  shl(0x20, tag_5)
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1467:1484  priceFeedUpdate() */
  0x20
  shr
  jump	// in
tag_4:
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":24:1489  contract A {... */
  jump(tag_6)
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":684:967  function priceFeedUpdate() public{... */
tag_5:
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":749:788  keccak256("function priceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x66756e6374696f6e207072696365466565645570646174652829000000000000
  dup2
  mstore
  pop
  0x1a
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":727:746  priceFeedUpdate_key */
  0x03
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":727:788  priceFeedUpdate_key = keccak256("function priceFeedUpdate()") */
  dup2
  swap1
  sstore
  pop
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":862:886  priceFeedUpdate_key_slot */
  0x03
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":856:887  sload(priceFeedUpdate_key_slot) */
  sload
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":852:854  32 */
  0x20
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":842:888  createsig(32, sload(priceFeedUpdate_key_slot)) */
  createsig
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":813:840  priceFeedUpdate_status_slot */
  0x02
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":806:889  sstore(priceFeedUpdate_status_slot, createsig(32, sload(priceFeedUpdate_key_slot))) */
  sstore
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":931:956  priceFeedUpdate_data_slot */
  0x00
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":900:929  priceFeedUpdate_dataslot_slot */
  0x01
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":893:957  sstore(priceFeedUpdate_dataslot_slot, priceFeedUpdate_data_slot) */
  sstore
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":801:961  {... */
  jump	// out
    /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":24:1489  contract A {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":24:1489  contract A {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x5531ba9c
      gt
      tag_14
      jumpi
      dup1
      0x5531ba9c
      eq
      tag_8
      jumpi
      dup1
      0x6bb97c67
      eq
      tag_9
      jumpi
      dup1
      0xbab3affe
      eq
      tag_10
      jumpi
      dup1
      0xc260b94c
      eq
      tag_11
      jumpi
      dup1
      0xe8e18682
      eq
      tag_12
      jumpi
      dup1
      0xfd5e127c
      eq
      tag_13
      jumpi
      jump(tag_2)
    tag_14:
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x2c4e57fc
      eq
      tag_4
      jumpi
      dup1
      0x3e4fe9a4
      eq
      tag_5
      jumpi
      dup1
      0x459a453a
      eq
      tag_6
      jumpi
      dup1
      0x4a2e901c
      eq
      tag_7
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":41:76  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_15
      tag_16
      jump	// in
    tag_15:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":197:231  bytes32 public priceFeedUpdate_key */
    tag_4:
      tag_17
      tag_18
      jump	// in
    tag_17:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":340:432  function get_priceFeedUpdate_argc() public pure returns (uint argc){... */
    tag_5:
      tag_19
      tag_20
      jump	// in
    tag_19:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":157:191  uint public priceFeedUpdate_status */
    tag_6:
      tag_21
      tag_22
      jump	// in
    tag_21:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":234:338  function set_priceFeedUpdate_data(bytes32 dataSet) public {... */
    tag_7:
      tag_23
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_24
      jumpi
      0x00
      dup1
      revert
    tag_24:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_25
      jump	// in
    tag_23:
      stop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":117:154  bytes public priceFeedUpdate_dataslot */
    tag_8:
      tag_26
      tag_27
      jump	// in
    tag_26:
      mload(0x40)
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      dup4
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_28:
      dup4
      dup2
      lt
      iszero
      tag_30
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_28)
    tag_30:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_31
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_31:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":973:1439  function emitfunc(bytes32 DataSent) public {... */
    tag_9:
      tag_32
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_33
      jumpi
      0x00
      dup1
      revert
    tag_33:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_34
      jump	// in
    tag_32:
      stop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":434:544  function get_priceFeedUpdate_key() public view returns (bytes32 key){... */
    tag_10:
      tag_35
      tag_36
      jump	// in
    tag_35:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":684:967  function priceFeedUpdate() public{... */
    tag_11:
      tag_37
      tag_38
      jump	// in
    tag_37:
      stop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":79:114  bytes32 public priceFeedUpdate_data */
    tag_12:
      tag_39
      tag_40
      jump	// in
    tag_39:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":549:679  function get_priceFeedUpdate_dataslot() public view returns (bytes memory dataslot){... */
    tag_13:
      tag_41
      tag_42
      jump	// in
    tag_41:
      mload(0x40)
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      dup4
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_43:
      dup4
      dup2
      lt
      iszero
      tag_45
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_43)
    tag_45:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_46
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_46:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":41:76  uint public constant ONE_HOUR = 180 */
    tag_16:
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":73:76  180 */
      0xb4
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":41:76  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":197:231  bytes32 public priceFeedUpdate_key */
    tag_18:
      sload(0x03)
      dup2
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":340:432  function get_priceFeedUpdate_argc() public pure returns (uint argc){... */
    tag_20:
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":397:406  uint argc */
      0x00
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":423:425  32 */
      0x20
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":416:425  return 32 */
      swap1
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":340:432  function get_priceFeedUpdate_argc() public pure returns (uint argc){... */
      swap1
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":157:191  uint public priceFeedUpdate_status */
    tag_22:
      sload(0x02)
      dup2
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":234:338  function set_priceFeedUpdate_data(bytes32 dataSet) public {... */
    tag_25:
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":324:331  dataSet */
      dup1
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":301:321  priceFeedUpdate_data */
      0x00
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":301:331  priceFeedUpdate_data = dataSet */
      dup2
      swap1
      sstore
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":234:338  function set_priceFeedUpdate_data(bytes32 dataSet) public {... */
      pop
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":117:154  bytes public priceFeedUpdate_dataslot */
    tag_27:
      0x01
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      iszero
      tag_49
      jumpi
      dup1
      0x1f
      lt
      tag_50
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_49)
    tag_50:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_51:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_51
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_49:
      pop
      pop
      pop
      pop
      pop
      dup2
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":973:1439  function emitfunc(bytes32 DataSent) public {... */
    tag_34:
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1026:1030  this */
      address
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1026:1055  this.set_priceFeedUpdate_data */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x4a2e901c
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1056:1064  DataSent */
      dup3
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1026:1065  this.set_priceFeedUpdate_data(DataSent) */
      mload(0x40)
      dup3
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_53
      jumpi
      0x00
      dup1
      revert
    tag_53:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_55
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_55:
      pop
      pop
      pop
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1075:1105  uint this_priceFeedUpdate_argc */
      0x00
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1108:1112  this */
      address
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1108:1137  this.get_priceFeedUpdate_argc */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x3e4fe9a4
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1108:1139  this.get_priceFeedUpdate_argc() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_56
      jumpi
      0x00
      dup1
      revert
    tag_56:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_58
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_58:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_59
      jumpi
      0x00
      dup1
      revert
    tag_59:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1075:1139  uint this_priceFeedUpdate_argc = this.get_priceFeedUpdate_argc() */
      swap1
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1143:1185  bytes memory this_priceFeedUpdate_dataslot */
      0x60
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1188:1192  this */
      address
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1188:1221  this.get_priceFeedUpdate_dataslot */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xfd5e127c
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1188:1223  this.get_priceFeedUpdate_dataslot() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_60
      jumpi
      0x00
      dup1
      revert
    tag_60:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_62
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_62:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      0x20
      dup2
      lt
      iszero
      tag_63
      jumpi
      0x00
      dup1
      revert
    tag_63:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      mload(0x40)
      swap4
      swap3
      swap2
      swap1
      dup5
      0x0100000000
      dup3
      gt
      iszero
      tag_64
      jumpi
      0x00
      dup1
      revert
    tag_64:
      dup4
      dup3
      add
      swap2
      pop
      0x20
      dup3
      add
      dup6
      dup2
      gt
      iszero
      tag_65
      jumpi
      0x00
      dup1
      revert
    tag_65:
      dup3
      mload
      dup7
      0x01
      dup3
      mul
      dup4
      add
      gt
      0x0100000000
      dup3
      gt
      or
      iszero
      tag_66
      jumpi
      0x00
      dup1
      revert
    tag_66:
      dup1
      dup4
      mstore
      0x20
      dup4
      add
      swap3
      pop
      pop
      pop
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_67:
      dup4
      dup2
      lt
      iszero
      tag_69
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_67)
    tag_69:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_70
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_70:
      pop
      0x40
      mstore
      pop
      pop
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1143:1223  bytes memory this_priceFeedUpdate_dataslot = this.get_priceFeedUpdate_dataslot() */
      swap1
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1227:1259  bytes32 this_priceFeedUpdate_key */
      0x00
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1262:1266  this */
      address
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1262:1290  this.get_priceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xbab3affe
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1262:1292  this.get_priceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_71
      jumpi
      0x00
      dup1
      revert
    tag_71:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_73
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_73:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_74
      jumpi
      0x00
      dup1
      revert
    tag_74:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1227:1292  bytes32 this_priceFeedUpdate_key = this.get_priceFeedUpdate_key() */
      swap1
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1398:1423  this_priceFeedUpdate_argc */
      dup3
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1367:1396  this_priceFeedUpdate_dataslot */
      dup3
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1357:1365  ONE_HOUR */
      0xb4
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1331:1355  this_priceFeedUpdate_key */
      dup4
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1323:1424  emitsig(this_priceFeedUpdate_key, ONE_HOUR, this_priceFeedUpdate_dataslot, this_priceFeedUpdate_argc) */
      emitsig
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1317:1321  0x40 */
      0x40
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1310:1425  mstore(0x40, emitsig(this_priceFeedUpdate_key, ONE_HOUR, this_priceFeedUpdate_dataslot, this_priceFeedUpdate_argc)) */
      mstore
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":1305:1432  {... */
      pop
      pop
      pop
      pop
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":434:544  function get_priceFeedUpdate_key() public view returns (bytes32 key){... */
    tag_36:
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":490:501  bytes32 key */
      0x00
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":518:537  priceFeedUpdate_key */
      sload(0x03)
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":511:537  return priceFeedUpdate_key */
      swap1
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":434:544  function get_priceFeedUpdate_key() public view returns (bytes32 key){... */
      swap1
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":684:967  function priceFeedUpdate() public{... */
    tag_38:
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":749:788  keccak256("function priceFeedUpdate()") */
      mload(0x40)
      dup1
      dup1
      0x66756e6374696f6e207072696365466565645570646174652829000000000000
      dup2
      mstore
      pop
      0x1a
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":727:746  priceFeedUpdate_key */
      0x03
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":727:788  priceFeedUpdate_key = keccak256("function priceFeedUpdate()") */
      dup2
      swap1
      sstore
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":862:886  priceFeedUpdate_key_slot */
      0x03
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":856:887  sload(priceFeedUpdate_key_slot) */
      sload
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":852:854  32 */
      0x20
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":842:888  createsig(32, sload(priceFeedUpdate_key_slot)) */
      createsig
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":813:840  priceFeedUpdate_status_slot */
      0x02
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":806:889  sstore(priceFeedUpdate_status_slot, createsig(32, sload(priceFeedUpdate_key_slot))) */
      sstore
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":931:956  priceFeedUpdate_data_slot */
      0x00
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":900:929  priceFeedUpdate_dataslot_slot */
      0x01
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":893:957  sstore(priceFeedUpdate_dataslot_slot, priceFeedUpdate_data_slot) */
      sstore
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":801:961  {... */
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":79:114  bytes32 public priceFeedUpdate_data */
    tag_40:
      sload(0x00)
      dup2
      jump	// out
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":549:679  function get_priceFeedUpdate_dataslot() public view returns (bytes memory dataslot){... */
    tag_42:
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":610:631  bytes memory dataslot */
      0x60
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":648:672  priceFeedUpdate_dataslot */
      0x01
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":641:672  return priceFeedUpdate_dataslot */
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      iszero
      tag_78
      jumpi
      dup1
      0x1f
      lt
      tag_79
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_78)
    tag_79:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_80:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_80
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_78:
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "./signalslot_parse_script/tb/tb6/signaltest_afterparse.sol":549:679  function get_priceFeedUpdate_dataslot() public view returns (bytes memory dataslot){... */
      swap1
      jump	// out

    auxdata: 0xa2646970667358221220579db71964789fb9fef7d12008ae02c84283755b9cb52634c5dc12a7bb8bec4564736f6c63782c302e362e31312d646576656c6f702e323032302e372e32312b636f6d6d69742e63316635663761632e6d6f64005d
}
