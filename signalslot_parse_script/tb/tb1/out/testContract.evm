    /* "testContract_afterparse.sol":595:2006  contract testContract {... */
  mstore(0x40, 0x80)
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "testContract_afterparse.sol":595:2006  contract testContract {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x81b28b60
      gt
      tag_11
      jumpi
      dup1
      0x81b28b60
      eq
      tag_7
      jumpi
      dup1
      0xa0a25d6b
      eq
      tag_8
      jumpi
      dup1
      0xc8c2d18e
      eq
      tag_9
      jumpi
      dup1
      0xe0279d08
      eq
      tag_10
      jumpi
      jump(tag_2)
    tag_11:
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x395f9b8d
      eq
      tag_4
      jumpi
      dup1
      0x3b51f2b5
      eq
      tag_5
      jumpi
      dup1
      0x434d081c
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "testContract_afterparse.sol":659:694  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_12
      tag_13
      jump	// in
    tag_12:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":1176:1413  function bindfunc() public view{... */
    tag_4:
      tag_14
      tag_15
      jump	// in
    tag_14:
      stop
        /* "testContract_afterparse.sol":1012:1174  function what_ever_func(uint obj) public{... */
    tag_5:
      tag_16
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_17
      jumpi
      0x00
      dup1
      revert
    tag_17:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_18
      jump	// in
    tag_16:
      stop
        /* "testContract_afterparse.sol":711:739  uint public what_ever_slotId */
    tag_6:
      tag_19
      tag_20
      jump	// in
    tag_19:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":1764:2004  function detachfunc() public view{... */
    tag_7:
      tag_21
      tag_22
      jump	// in
    tag_21:
      stop
        /* "testContract_afterparse.sol":1418:1759  function emitfunc() public view{... */
    tag_8:
      tag_23
      tag_24
      jump	// in
    tag_23:
      stop
        /* "testContract_afterparse.sol":782:1007  function what_ever() public{... */
    tag_9:
      tag_25
      tag_26
      jump	// in
    tag_25:
      stop
        /* "testContract_afterparse.sol":745:776  bytes4 public what_ever_codePtr */
    tag_10:
      tag_27
      tag_28
      jump	// in
    tag_27:
      mload(0x40)
      dup1
      dup3
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":659:694  uint public constant ONE_HOUR = 180 */
    tag_13:
        /* "testContract_afterparse.sol":691:694  180 */
      0xb4
        /* "testContract_afterparse.sol":659:694  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "testContract_afterparse.sol":1176:1413  function bindfunc() public view{... */
    tag_15:
        /* "testContract_afterparse.sol":1211:1230  address dut_address */
      0x00
        /* "testContract_afterparse.sol":1241:1244  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1211:1245  address dut_address = address(dut) */
      swap1
      pop
        /* "testContract_afterparse.sol":1249:1279  uint dut_PriceFeedUpdate_sigId */
      0x00
        /* "testContract_afterparse.sol":1282:1285  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1282:1307  dut.PriceFeedUpdate_sigId */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x25e29249
        /* "testContract_afterparse.sol":1282:1309  dut.PriceFeedUpdate_sigId() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_30
      jumpi
      0x00
      dup1
      revert
    tag_30:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_32
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_32:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_33
      jumpi
      0x00
      dup1
      revert
    tag_33:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1249:1309  uint dut_PriceFeedUpdate_sigId = dut.PriceFeedUpdate_sigId() */
      swap1
      pop
        /* "testContract_afterparse.sol":1379:1400  what_ever_slotId_slot */
      0x02
        /* "testContract_afterparse.sol":1373:1401  sload(what_ever_slotId_slot) */
      sload
        /* "testContract_afterparse.sol":1347:1372  dut_PriceFeedUpdate_sigId */
      dup2
        /* "testContract_afterparse.sol":1335:1346  dut_address */
      dup4
        /* "testContract_afterparse.sol":1327:1402  bindsig(dut_address,dut_PriceFeedUpdate_sigId,sload(what_ever_slotId_slot)) */
      bindsig
        /* "testContract_afterparse.sol":1322:1409  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":1012:1174  function what_ever_func(uint obj) public{... */
    tag_18:
        /* "testContract_afterparse.sol":1076:1079  obj */
      dup1
        /* "testContract_afterparse.sol":1064:1073  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1064:1079  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":1105:1108  obj */
      dup1
        /* "testContract_afterparse.sol":1093:1102  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1093:1108  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":1134:1137  obj */
      dup1
        /* "testContract_afterparse.sol":1122:1131  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1122:1137  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":1163:1166  obj */
      dup1
        /* "testContract_afterparse.sol":1151:1160  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1151:1166  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":1012:1174  function what_ever_func(uint obj) public{... */
      pop
      jump	// out
        /* "testContract_afterparse.sol":711:739  uint public what_ever_slotId */
    tag_20:
      sload(0x02)
      dup2
      jump	// out
        /* "testContract_afterparse.sol":1764:2004  function detachfunc() public view{... */
    tag_22:
        /* "testContract_afterparse.sol":1801:1831  uint dut_PriceFeedUpdate_sigId */
      0x00
        /* "testContract_afterparse.sol":1834:1837  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1834:1859  dut.PriceFeedUpdate_sigId */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x25e29249
        /* "testContract_afterparse.sol":1834:1861  dut.PriceFeedUpdate_sigId() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_36
      jumpi
      0x00
      dup1
      revert
    tag_36:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_38
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_38:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_39
      jumpi
      0x00
      dup1
      revert
    tag_39:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1801:1861  uint dut_PriceFeedUpdate_sigId = dut.PriceFeedUpdate_sigId() */
      swap1
      pop
        /* "testContract_afterparse.sol":1865:1884  address dut_address */
      0x00
        /* "testContract_afterparse.sol":1895:1898  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1865:1899  address dut_address = address(dut) */
      swap1
      pop
        /* "testContract_afterparse.sol":1970:1991  what_ever_slotId_slot */
      0x02
        /* "testContract_afterparse.sol":1964:1992  sload(what_ever_slotId_slot) */
      sload
        /* "testContract_afterparse.sol":1938:1963  dut_PriceFeedUpdate_sigId */
      dup3
        /* "testContract_afterparse.sol":1926:1937  dut_address */
      dup3
        /* "testContract_afterparse.sol":1916:1993  detachsig(dut_address,dut_PriceFeedUpdate_sigId,sload(what_ever_slotId_slot)) */
      detachsig
        /* "testContract_afterparse.sol":1911:1997  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":1418:1759  function emitfunc() public view{... */
    tag_24:
        /* "testContract_afterparse.sol":1453:1494  bytes memory dut_PriceFeedUpdate_dataslot */
      0x60
        /* "testContract_afterparse.sol":1497:1500  dut */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1497:1525  dut.PriceFeedUpdate_dataslot */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xf6310288
        /* "testContract_afterparse.sol":1497:1527  dut.PriceFeedUpdate_dataslot() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_41
      jumpi
      0x00
      dup1
      revert
    tag_41:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_43
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_43:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      0x20
      dup2
      lt
      iszero
      tag_44
      jumpi
      0x00
      dup1
      revert
    tag_44:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      mload(0x40)
      swap4
      swap3
      swap2
      swap1
      dup5
      0x0100000000
      dup3
      gt
      iszero
      tag_45
      jumpi
      0x00
      dup1
      revert
    tag_45:
      dup4
      dup3
      add
      swap2
      pop
      0x20
      dup3
      add
      dup6
      dup2
      gt
      iszero
      tag_46
      jumpi
      0x00
      dup1
      revert
    tag_46:
      dup3
      mload
      dup7
      0x01
      dup3
      mul
      dup4
      add
      gt
      0x0100000000
      dup3
      gt
      or
      iszero
      tag_47
      jumpi
      0x00
      dup1
      revert
    tag_47:
      dup1
      dup4
      mstore
      0x20
      dup4
      add
      swap3
      pop
      pop
      pop
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_48:
      dup4
      dup2
      lt
      iszero
      tag_50
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_48)
    tag_50:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_51
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_51:
      pop
      0x40
      mstore
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1453:1527  bytes memory dut_PriceFeedUpdate_dataslot = dut.PriceFeedUpdate_dataslot() */
      swap1
      pop
        /* "testContract_afterparse.sol":1531:1561  uint dut_PriceFeedUpdate_sigId */
      0x00
        /* "testContract_afterparse.sol":1564:1567  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1564:1589  dut.PriceFeedUpdate_sigId */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x25e29249
        /* "testContract_afterparse.sol":1564:1591  dut.PriceFeedUpdate_sigId() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_52
      jumpi
      0x00
      dup1
      revert
    tag_52:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_54
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_54:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_55
      jumpi
      0x00
      dup1
      revert
    tag_55:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1531:1591  uint dut_PriceFeedUpdate_sigId = dut.PriceFeedUpdate_sigId() */
      swap1
      pop
        /* "testContract_afterparse.sol":1651:1665  price_xyz_slot */
      0x01
        /* "testContract_afterparse.sol":1645:1666  mload(price_xyz_slot) */
      mload
        /* "testContract_afterparse.sol":1616:1644  dut_PriceFeedUpdate_dataslot */
      dup3
        /* "testContract_afterparse.sol":1609:1667  mstore(dut_PriceFeedUpdate_dataslot,mload(price_xyz_slot)) */
      mstore
        /* "testContract_afterparse.sol":1743:1744  1 */
      0x01
        /* "testContract_afterparse.sol":1714:1742  dut_PriceFeedUpdate_dataslot */
      dup3
        /* "testContract_afterparse.sol":1705:1713  ONE_HOUR */
      0xb4
        /* "testContract_afterparse.sol":1679:1704  dut_PriceFeedUpdate_sigId */
      dup4
        /* "testContract_afterparse.sol":1671:1745  emitsig(dut_PriceFeedUpdate_sigId,ONE_HOUR,dut_PriceFeedUpdate_dataslot,1) */
      emitsig
        /* "testContract_afterparse.sol":1604:1752  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":782:1007  function what_ever() public{... */
    tag_26:
        /* "testContract_afterparse.sol":839:876  keccak256("what_ever_func(uint obj)") */
      mload(0x40)
      dup1
      dup1
      0x776861745f657665725f66756e632875696e74206f626a290000000000000000
      dup2
      mstore
      pop
      0x18
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "testContract_afterparse.sol":877:878  0 */
      0x00
        /* "testContract_afterparse.sol":839:879  keccak256("what_ever_func(uint obj)")[0] */
      0x20
      dup2
      lt
      tag_57
      jumpi
      invalid
    tag_57:
      byte
      0xf8
      shl
        /* "testContract_afterparse.sol":819:879  what_ever_codePtr = keccak256("what_ever_func(uint obj)")[0] */
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
        /* "testContract_afterparse.sol":819:836  what_ever_codePtr */
      0x03
      0x00
        /* "testContract_afterparse.sol":819:879  what_ever_codePtr = keccak256("what_ever_func(uint obj)")[0] */
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffffff
      mul
      not
      and
      swap1
      dup4
      0xe0
      shr
      mul
      or
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":986:987  2 */
      0x02
        /* "testContract_afterparse.sol":984:985  1 */
      0x01
        /* "testContract_afterparse.sol":960:982  what_ever_codePtr_slot */
      0x03
        /* "testContract_afterparse.sol":954:983  sload(what_ever_codePtr_slot) */
      sload
        /* "testContract_afterparse.sol":952:953  8 */
      0x08
        /* "testContract_afterparse.sol":941:988  createslot(8,sload(what_ever_codePtr_slot),1,2) */
      createslot
        /* "testContract_afterparse.sol":919:940  what_ever_slotId_slot */
      0x02
        /* "testContract_afterparse.sol":912:989  sstore(what_ever_slotId_slot,createslot(8,sload(what_ever_codePtr_slot),1,2)) */
      sstore
        /* "testContract_afterparse.sol":898:999  {... */
      jump	// out
        /* "testContract_afterparse.sol":745:776  bytes4 public what_ever_codePtr */
    tag_28:
      0x03
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xe0
      shl
      dup2
      jump	// out

    auxdata: 0xa264697066735822122025d9fa89943c162257a162e437da73e1f07a93a7a1da6279f000563f0ac5628764736f6c63782c302e362e31312d646576656c6f702e323032302e362e32352b636f6d6d69742e35623533626165322e6d6f64005d
}
