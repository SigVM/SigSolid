    /* "testContract_afterparse.sol":561:2055  contract testContract {... */
  mstore(0x40, 0x80)
    /* "testContract_afterparse.sol":2013:2053  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "testContract_afterparse.sol":2038:2049  what_ever() */
  tag_4
    /* "testContract_afterparse.sol":2038:2047  what_ever */
  shl(0x20, tag_5)
    /* "testContract_afterparse.sol":2038:2049  what_ever() */
  0x20
  shr
  jump	// in
tag_4:
    /* "testContract_afterparse.sol":561:2055  contract testContract {... */
  jump(tag_6)
    /* "testContract_afterparse.sol":751:1010  function what_ever() public{... */
tag_5:
    /* "testContract_afterparse.sol":808:848  keccak256("what_ever_func(bytes32 obj)") */
  mload(0x40)
  dup1
  dup1
  0x776861745f657665725f66756e632862797465733332206f626a290000000000
  dup2
  mstore
  pop
  0x1b
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "testContract_afterparse.sol":849:850  0 */
  0x00
    /* "testContract_afterparse.sol":808:851  keccak256("what_ever_func(bytes32 obj)")[0] */
  0x20
  dup2
  lt
  tag_8
  jumpi
  invalid
tag_8:
  byte
  0xf8
  shl
    /* "testContract_afterparse.sol":788:851  what_ever_codePtr = keccak256("what_ever_func(bytes32 obj)")[0] */
  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
  and
    /* "testContract_afterparse.sol":788:805  what_ever_codePtr */
  0x03
  0x00
    /* "testContract_afterparse.sol":788:851  what_ever_codePtr = keccak256("what_ever_func(bytes32 obj)")[0] */
  0x0100
  exp
  dup2
  sload
  dup2
  0xffffffff
  mul
  not
  and
  swap1
  dup4
  0xe0
  shr
  mul
  or
  swap1
  sstore
  pop
    /* "testContract_afterparse.sol":967:989  what_ever_codePtr_slot */
  0x03
    /* "testContract_afterparse.sol":961:990  sload(what_ever_codePtr_slot) */
  sload
    /* "testContract_afterparse.sol":959:960  2 */
  0x02
    /* "testContract_afterparse.sol":957:958  1 */
  0x01
    /* "testContract_afterparse.sol":933:955  what_ever_codePtr_slot */
  0x03
    /* "testContract_afterparse.sol":927:956  sload(what_ever_codePtr_slot) */
  sload
    /* "testContract_afterparse.sol":924:926  32 */
  0x20
    /* "testContract_afterparse.sol":913:991  createslot(32,sload(what_ever_codePtr_slot),1,2,sload(what_ever_codePtr_slot)) */
  createslot
    /* "testContract_afterparse.sol":891:912  what_ever_slotId_slot */
  0x02
    /* "testContract_afterparse.sol":884:992  sstore(what_ever_slotId_slot,createslot(32,sload(what_ever_codePtr_slot),1,2,sload(what_ever_codePtr_slot))) */
  sstore
    /* "testContract_afterparse.sol":870:1002  {... */
  jump	// out
    /* "testContract_afterparse.sol":561:2055  contract testContract {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "testContract_afterparse.sol":561:2055  contract testContract {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0xa0a25d6b
      gt
      tag_11
      jumpi
      dup1
      0xa0a25d6b
      eq
      tag_7
      jumpi
      dup1
      0xc8c2d18e
      eq
      tag_8
      jumpi
      dup1
      0xe0279d08
      eq
      tag_9
      jumpi
      dup1
      0xff44a36c
      eq
      tag_10
      jumpi
      jump(tag_2)
    tag_11:
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x395f9b8d
      eq
      tag_4
      jumpi
      dup1
      0x434d081c
      eq
      tag_5
      jumpi
      dup1
      0x81b28b60
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "testContract_afterparse.sol":628:663  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_12
      tag_13
      jump	// in
    tag_12:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":1182:1419  function bindfunc() public view{... */
    tag_4:
      tag_14
      tag_15
      jump	// in
    tag_14:
      stop
        /* "testContract_afterparse.sol":680:708  uint public what_ever_slotId */
    tag_5:
      tag_16
      tag_17
      jump	// in
    tag_16:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":1771:2011  function detachfunc() public view{... */
    tag_6:
      tag_18
      tag_19
      jump	// in
    tag_18:
      stop
        /* "testContract_afterparse.sol":1424:1766  function emitfunc() public view{... */
    tag_7:
      tag_20
      tag_21
      jump	// in
    tag_20:
      stop
        /* "testContract_afterparse.sol":751:1010  function what_ever() public{... */
    tag_8:
      tag_22
      tag_23
      jump	// in
    tag_22:
      stop
        /* "testContract_afterparse.sol":714:745  bytes4 public what_ever_codePtr */
    tag_9:
      tag_24
      tag_25
      jump	// in
    tag_24:
      mload(0x40)
      dup1
      dup3
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":1015:1180  function what_ever_func(bytes32 obj) public{... */
    tag_10:
      tag_26
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_27
      jumpi
      0x00
      dup1
      revert
    tag_27:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_28
      jump	// in
    tag_26:
      stop
        /* "testContract_afterparse.sol":628:663  uint public constant ONE_HOUR = 180 */
    tag_13:
        /* "testContract_afterparse.sol":660:663  180 */
      0xb4
        /* "testContract_afterparse.sol":628:663  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "testContract_afterparse.sol":1182:1419  function bindfunc() public view{... */
    tag_15:
        /* "testContract_afterparse.sol":1217:1236  address dut_address */
      0x00
        /* "testContract_afterparse.sol":1247:1250  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1217:1251  address dut_address = address(dut) */
      swap1
      pop
        /* "testContract_afterparse.sol":1255:1285  uint dut_PriceFeedUpdate_sigId */
      0x00
        /* "testContract_afterparse.sol":1288:1291  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1288:1313  dut.PriceFeedUpdate_sigId */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x25e29249
        /* "testContract_afterparse.sol":1288:1315  dut.PriceFeedUpdate_sigId() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_30
      jumpi
      0x00
      dup1
      revert
    tag_30:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_32
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_32:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_33
      jumpi
      0x00
      dup1
      revert
    tag_33:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1255:1315  uint dut_PriceFeedUpdate_sigId = dut.PriceFeedUpdate_sigId() */
      swap1
      pop
        /* "testContract_afterparse.sol":1385:1406  what_ever_slotId_slot */
      0x02
        /* "testContract_afterparse.sol":1379:1407  sload(what_ever_slotId_slot) */
      sload
        /* "testContract_afterparse.sol":1353:1378  dut_PriceFeedUpdate_sigId */
      dup2
        /* "testContract_afterparse.sol":1341:1352  dut_address */
      dup4
        /* "testContract_afterparse.sol":1333:1408  bindsig(dut_address,dut_PriceFeedUpdate_sigId,sload(what_ever_slotId_slot)) */
      bindsig
        /* "testContract_afterparse.sol":1328:1415  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":680:708  uint public what_ever_slotId */
    tag_17:
      sload(0x02)
      dup2
      jump	// out
        /* "testContract_afterparse.sol":1771:2011  function detachfunc() public view{... */
    tag_19:
        /* "testContract_afterparse.sol":1808:1838  uint dut_PriceFeedUpdate_sigId */
      0x00
        /* "testContract_afterparse.sol":1841:1844  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1841:1866  dut.PriceFeedUpdate_sigId */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x25e29249
        /* "testContract_afterparse.sol":1841:1868  dut.PriceFeedUpdate_sigId() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_35
      jumpi
      0x00
      dup1
      revert
    tag_35:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_37
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_37:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_38
      jumpi
      0x00
      dup1
      revert
    tag_38:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1808:1868  uint dut_PriceFeedUpdate_sigId = dut.PriceFeedUpdate_sigId() */
      swap1
      pop
        /* "testContract_afterparse.sol":1872:1891  address dut_address */
      0x00
        /* "testContract_afterparse.sol":1902:1905  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1872:1906  address dut_address = address(dut) */
      swap1
      pop
        /* "testContract_afterparse.sol":1977:1998  what_ever_slotId_slot */
      0x02
        /* "testContract_afterparse.sol":1971:1999  sload(what_ever_slotId_slot) */
      sload
        /* "testContract_afterparse.sol":1945:1970  dut_PriceFeedUpdate_sigId */
      dup3
        /* "testContract_afterparse.sol":1933:1944  dut_address */
      dup3
        /* "testContract_afterparse.sol":1923:2000  detachsig(dut_address,dut_PriceFeedUpdate_sigId,sload(what_ever_slotId_slot)) */
      detachsig
        /* "testContract_afterparse.sol":1918:2004  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":1424:1766  function emitfunc() public view{... */
    tag_21:
        /* "testContract_afterparse.sol":1459:1500  bytes memory dut_PriceFeedUpdate_dataslot */
      0x60
        /* "testContract_afterparse.sol":1503:1506  dut */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1503:1531  dut.PriceFeedUpdate_dataslot */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xf6310288
        /* "testContract_afterparse.sol":1503:1533  dut.PriceFeedUpdate_dataslot() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_40
      jumpi
      0x00
      dup1
      revert
    tag_40:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_42
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_42:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      0x20
      dup2
      lt
      iszero
      tag_43
      jumpi
      0x00
      dup1
      revert
    tag_43:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      mload(0x40)
      swap4
      swap3
      swap2
      swap1
      dup5
      0x0100000000
      dup3
      gt
      iszero
      tag_44
      jumpi
      0x00
      dup1
      revert
    tag_44:
      dup4
      dup3
      add
      swap2
      pop
      0x20
      dup3
      add
      dup6
      dup2
      gt
      iszero
      tag_45
      jumpi
      0x00
      dup1
      revert
    tag_45:
      dup3
      mload
      dup7
      0x01
      dup3
      mul
      dup4
      add
      gt
      0x0100000000
      dup3
      gt
      or
      iszero
      tag_46
      jumpi
      0x00
      dup1
      revert
    tag_46:
      dup1
      dup4
      mstore
      0x20
      dup4
      add
      swap3
      pop
      pop
      pop
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_47:
      dup4
      dup2
      lt
      iszero
      tag_49
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_47)
    tag_49:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_50
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_50:
      pop
      0x40
      mstore
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1459:1533  bytes memory dut_PriceFeedUpdate_dataslot = dut.PriceFeedUpdate_dataslot() */
      swap1
      pop
        /* "testContract_afterparse.sol":1537:1567  uint dut_PriceFeedUpdate_sigId */
      0x00
        /* "testContract_afterparse.sol":1570:1573  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1570:1595  dut.PriceFeedUpdate_sigId */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x25e29249
        /* "testContract_afterparse.sol":1570:1597  dut.PriceFeedUpdate_sigId() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_51
      jumpi
      0x00
      dup1
      revert
    tag_51:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_53
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_53:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_54
      jumpi
      0x00
      dup1
      revert
    tag_54:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1537:1597  uint dut_PriceFeedUpdate_sigId = dut.PriceFeedUpdate_sigId() */
      swap1
      pop
        /* "testContract_afterparse.sol":1657:1671  price_xyz_slot */
      0x01
        /* "testContract_afterparse.sol":1651:1672  mload(price_xyz_slot) */
      mload
        /* "testContract_afterparse.sol":1622:1650  dut_PriceFeedUpdate_dataslot */
      dup3
        /* "testContract_afterparse.sol":1615:1673  mstore(dut_PriceFeedUpdate_dataslot,mload(price_xyz_slot)) */
      mstore
        /* "testContract_afterparse.sol":1749:1751  32 */
      0x20
        /* "testContract_afterparse.sol":1720:1748  dut_PriceFeedUpdate_dataslot */
      dup3
        /* "testContract_afterparse.sol":1711:1719  ONE_HOUR */
      0xb4
        /* "testContract_afterparse.sol":1685:1710  dut_PriceFeedUpdate_sigId */
      dup4
        /* "testContract_afterparse.sol":1677:1752  emitsig(dut_PriceFeedUpdate_sigId,ONE_HOUR,dut_PriceFeedUpdate_dataslot,32) */
      emitsig
        /* "testContract_afterparse.sol":1610:1759  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":751:1010  function what_ever() public{... */
    tag_23:
        /* "testContract_afterparse.sol":808:848  keccak256("what_ever_func(bytes32 obj)") */
      mload(0x40)
      dup1
      dup1
      0x776861745f657665725f66756e632862797465733332206f626a290000000000
      dup2
      mstore
      pop
      0x1b
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "testContract_afterparse.sol":849:850  0 */
      0x00
        /* "testContract_afterparse.sol":808:851  keccak256("what_ever_func(bytes32 obj)")[0] */
      0x20
      dup2
      lt
      tag_56
      jumpi
      invalid
    tag_56:
      byte
      0xf8
      shl
        /* "testContract_afterparse.sol":788:851  what_ever_codePtr = keccak256("what_ever_func(bytes32 obj)")[0] */
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
        /* "testContract_afterparse.sol":788:805  what_ever_codePtr */
      0x03
      0x00
        /* "testContract_afterparse.sol":788:851  what_ever_codePtr = keccak256("what_ever_func(bytes32 obj)")[0] */
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffffff
      mul
      not
      and
      swap1
      dup4
      0xe0
      shr
      mul
      or
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":967:989  what_ever_codePtr_slot */
      0x03
        /* "testContract_afterparse.sol":961:990  sload(what_ever_codePtr_slot) */
      sload
        /* "testContract_afterparse.sol":959:960  2 */
      0x02
        /* "testContract_afterparse.sol":957:958  1 */
      0x01
        /* "testContract_afterparse.sol":933:955  what_ever_codePtr_slot */
      0x03
        /* "testContract_afterparse.sol":927:956  sload(what_ever_codePtr_slot) */
      sload
        /* "testContract_afterparse.sol":924:926  32 */
      0x20
        /* "testContract_afterparse.sol":913:991  createslot(32,sload(what_ever_codePtr_slot),1,2,sload(what_ever_codePtr_slot)) */
      createslot
        /* "testContract_afterparse.sol":891:912  what_ever_slotId_slot */
      0x02
        /* "testContract_afterparse.sol":884:992  sstore(what_ever_slotId_slot,createslot(32,sload(what_ever_codePtr_slot),1,2,sload(what_ever_codePtr_slot))) */
      sstore
        /* "testContract_afterparse.sol":870:1002  {... */
      jump	// out
        /* "testContract_afterparse.sol":714:745  bytes4 public what_ever_codePtr */
    tag_25:
      0x03
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xe0
      shl
      dup2
      jump	// out
        /* "testContract_afterparse.sol":1015:1180  function what_ever_func(bytes32 obj) public{... */
    tag_28:
        /* "testContract_afterparse.sol":1082:1085  obj */
      dup1
        /* "testContract_afterparse.sol":1070:1079  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1070:1085  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":1111:1114  obj */
      dup1
        /* "testContract_afterparse.sol":1099:1108  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1099:1114  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":1140:1143  obj */
      dup1
        /* "testContract_afterparse.sol":1128:1137  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1128:1143  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":1169:1172  obj */
      dup1
        /* "testContract_afterparse.sol":1157:1166  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1157:1172  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":1015:1180  function what_ever_func(bytes32 obj) public{... */
      pop
      jump	// out

    auxdata: 0xa2646970667358221220e57e868d66639c579e385d431bcb3b64b0ea65a16eed98f05717cc167b1686d964736f6c63782c302e362e31312d646576656c6f702e323032302e362e32382b636f6d6d69742e63653537373565302e6d6f64005d
}
