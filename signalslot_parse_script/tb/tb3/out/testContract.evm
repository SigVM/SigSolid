    /* "testContract_afterparse.sol":561:1899  contract testContract {... */
  mstore(0x40, 0x80)
    /* "testContract_afterparse.sol":1857:1897  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "testContract_afterparse.sol":1882:1893  what_ever() */
  tag_4
    /* "testContract_afterparse.sol":1882:1891  what_ever */
  shl(0x20, tag_5)
    /* "testContract_afterparse.sol":1882:1893  what_ever() */
  0x20
  shr
  jump	// in
tag_4:
    /* "testContract_afterparse.sol":561:1899  contract testContract {... */
  jump(tag_6)
    /* "testContract_afterparse.sol":740:973  function what_ever() public{... */
tag_5:
    /* "testContract_afterparse.sol":797:837  keccak256("what_ever_func(bytes32 obj)") */
  mload(0x40)
  dup1
  dup1
  0x776861745f657665725f66756e632862797465733332206f626a290000000000
  dup2
  mstore
  pop
  0x1b
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "testContract_afterparse.sol":777:794  what_ever_codePtr */
  0x03
    /* "testContract_afterparse.sol":777:837  what_ever_codePtr = keccak256("what_ever_func(bytes32 obj)") */
  dup2
  swap1
  sstore
  pop
    /* "testContract_afterparse.sol":930:952  what_ever_codePtr_slot */
  0x03
    /* "testContract_afterparse.sol":924:953  sload(what_ever_codePtr_slot) */
  sload
    /* "testContract_afterparse.sol":919:923  0x09 */
  0x09
    /* "testContract_afterparse.sol":915:918  100 */
  0x64
    /* "testContract_afterparse.sol":913:914  1 */
  0x01
    /* "testContract_afterparse.sol":910:912  32 */
  0x20
    /* "testContract_afterparse.sol":899:954  createslot(32,1,100,0x09,sload(what_ever_codePtr_slot)) */
  createslot
    /* "testContract_afterparse.sol":877:898  what_ever_status_slot */
  0x02
    /* "testContract_afterparse.sol":870:955  sstore(what_ever_status_slot,createslot(32,1,100,0x09,sload(what_ever_codePtr_slot))) */
  sstore
    /* "testContract_afterparse.sol":856:965  {... */
  jump	// out
    /* "testContract_afterparse.sol":561:1899  contract testContract {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "testContract_afterparse.sol":561:1899  contract testContract {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0xa0a25d6b
      gt
      tag_11
      jumpi
      dup1
      0xa0a25d6b
      eq
      tag_7
      jumpi
      dup1
      0xc8c2d18e
      eq
      tag_8
      jumpi
      dup1
      0xe0279d08
      eq
      tag_9
      jumpi
      dup1
      0xff44a36c
      eq
      tag_10
      jumpi
      jump(tag_2)
    tag_11:
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x395f9b8d
      eq
      tag_4
      jumpi
      dup1
      0x42316932
      eq
      tag_5
      jumpi
      dup1
      0x81b28b60
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "testContract_afterparse.sol":628:662  uint public constant ONE_HOUR = 10 */
    tag_3:
      tag_12
      tag_13
      jump	// in
    tag_12:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":1046:1276  function bindfunc() public {... */
    tag_4:
      tag_14
      tag_15
      jump	// in
    tag_14:
      stop
        /* "testContract_afterparse.sol":668:696  uint public what_ever_status */
    tag_5:
      tag_16
      tag_17
      jump	// in
    tag_16:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":1621:1855  function detachfunc() public {... */
    tag_6:
      tag_18
      tag_19
      jump	// in
    tag_18:
      stop
        /* "testContract_afterparse.sol":1281:1616  function emitfunc() public {... */
    tag_7:
      tag_20
      tag_21
      jump	// in
    tag_20:
      stop
        /* "testContract_afterparse.sol":740:973  function what_ever() public{... */
    tag_8:
      tag_22
      tag_23
      jump	// in
    tag_22:
      stop
        /* "testContract_afterparse.sol":702:734  bytes32 public what_ever_codePtr */
    tag_9:
      tag_24
      tag_25
      jump	// in
    tag_24:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "testContract_afterparse.sol":978:1044  function what_ever_func(bytes32 obj) public{... */
    tag_10:
      tag_26
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_27
      jumpi
      0x00
      dup1
      revert
    tag_27:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_28
      jump	// in
    tag_26:
      stop
        /* "testContract_afterparse.sol":628:662  uint public constant ONE_HOUR = 10 */
    tag_13:
        /* "testContract_afterparse.sol":660:662  10 */
      0x0a
        /* "testContract_afterparse.sol":628:662  uint public constant ONE_HOUR = 10 */
      dup2
      jump	// out
        /* "testContract_afterparse.sol":1046:1276  function bindfunc() public {... */
    tag_15:
        /* "testContract_afterparse.sol":1077:1096  address dut_address */
      0x00
        /* "testContract_afterparse.sol":1107:1110  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1077:1111  address dut_address = address(dut) */
      swap1
      pop
        /* "testContract_afterparse.sol":1115:1146  bytes32 dut_PriceFeedUpdate_key */
      0x00
        /* "testContract_afterparse.sol":1149:1152  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1149:1172  dut.PriceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x329eed9c
        /* "testContract_afterparse.sol":1149:1174  dut.PriceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_30
      jumpi
      0x00
      dup1
      revert
    tag_30:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_32
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_32:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_33
      jumpi
      0x00
      dup1
      revert
    tag_33:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1115:1174  bytes32 dut_PriceFeedUpdate_key = dut.PriceFeedUpdate_key() */
      swap1
      pop
        /* "testContract_afterparse.sol":1242:1264  what_ever_codePtr_slot */
      0x03
        /* "testContract_afterparse.sol":1236:1265  sload(what_ever_codePtr_slot) */
      sload
        /* "testContract_afterparse.sol":1212:1235  dut_PriceFeedUpdate_key */
      dup2
        /* "testContract_afterparse.sol":1200:1211  dut_address */
      dup4
        /* "testContract_afterparse.sol":1192:1266  bindsig(dut_address,dut_PriceFeedUpdate_key,sload(what_ever_codePtr_slot)) */
      bindsig
        /* "testContract_afterparse.sol":1187:1273  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":668:696  uint public what_ever_status */
    tag_17:
      sload(0x02)
      dup2
      jump	// out
        /* "testContract_afterparse.sol":1621:1855  function detachfunc() public {... */
    tag_19:
        /* "testContract_afterparse.sol":1654:1685  bytes32 dut_PriceFeedUpdate_key */
      0x00
        /* "testContract_afterparse.sol":1688:1691  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1688:1711  dut.PriceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x329eed9c
        /* "testContract_afterparse.sol":1688:1713  dut.PriceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_35
      jumpi
      0x00
      dup1
      revert
    tag_35:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_37
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_37:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_38
      jumpi
      0x00
      dup1
      revert
    tag_38:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1654:1713  bytes32 dut_PriceFeedUpdate_key = dut.PriceFeedUpdate_key() */
      swap1
      pop
        /* "testContract_afterparse.sol":1717:1736  address dut_address */
      0x00
        /* "testContract_afterparse.sol":1747:1750  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1717:1751  address dut_address = address(dut) */
      swap1
      pop
        /* "testContract_afterparse.sol":1820:1842  what_ever_codePtr_slot */
      0x03
        /* "testContract_afterparse.sol":1814:1843  sload(what_ever_codePtr_slot) */
      sload
        /* "testContract_afterparse.sol":1790:1813  dut_PriceFeedUpdate_key */
      dup3
        /* "testContract_afterparse.sol":1778:1789  dut_address */
      dup3
        /* "testContract_afterparse.sol":1768:1844  detachsig(dut_address,dut_PriceFeedUpdate_key,sload(what_ever_codePtr_slot)) */
      detachsig
        /* "testContract_afterparse.sol":1763:1848  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":1281:1616  function emitfunc() public {... */
    tag_21:
        /* "testContract_afterparse.sol":1312:1353  bytes memory dut_PriceFeedUpdate_dataslot */
      0x60
        /* "testContract_afterparse.sol":1356:1359  dut */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1356:1384  dut.PriceFeedUpdate_dataslot */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xf6310288
        /* "testContract_afterparse.sol":1356:1386  dut.PriceFeedUpdate_dataslot() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_40
      jumpi
      0x00
      dup1
      revert
    tag_40:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_42
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_42:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      0x20
      dup2
      lt
      iszero
      tag_43
      jumpi
      0x00
      dup1
      revert
    tag_43:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      mload(0x40)
      swap4
      swap3
      swap2
      swap1
      dup5
      0x0100000000
      dup3
      gt
      iszero
      tag_44
      jumpi
      0x00
      dup1
      revert
    tag_44:
      dup4
      dup3
      add
      swap2
      pop
      0x20
      dup3
      add
      dup6
      dup2
      gt
      iszero
      tag_45
      jumpi
      0x00
      dup1
      revert
    tag_45:
      dup3
      mload
      dup7
      0x01
      dup3
      mul
      dup4
      add
      gt
      0x0100000000
      dup3
      gt
      or
      iszero
      tag_46
      jumpi
      0x00
      dup1
      revert
    tag_46:
      dup1
      dup4
      mstore
      0x20
      dup4
      add
      swap3
      pop
      pop
      pop
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_47:
      dup4
      dup2
      lt
      iszero
      tag_49
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_47)
    tag_49:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_50
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_50:
      pop
      0x40
      mstore
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1312:1386  bytes memory dut_PriceFeedUpdate_dataslot = dut.PriceFeedUpdate_dataslot() */
      swap1
      pop
        /* "testContract_afterparse.sol":1390:1421  bytes32 dut_PriceFeedUpdate_key */
      0x00
        /* "testContract_afterparse.sol":1424:1427  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "testContract_afterparse.sol":1424:1447  dut.PriceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x329eed9c
        /* "testContract_afterparse.sol":1424:1449  dut.PriceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_51
      jumpi
      0x00
      dup1
      revert
    tag_51:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_53
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_53:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_54
      jumpi
      0x00
      dup1
      revert
    tag_54:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "testContract_afterparse.sol":1390:1449  bytes32 dut_PriceFeedUpdate_key = dut.PriceFeedUpdate_key() */
      swap1
      pop
        /* "testContract_afterparse.sol":1509:1523  price_xyz_slot */
      0x01
        /* "testContract_afterparse.sol":1503:1524  mload(price_xyz_slot) */
      mload
        /* "testContract_afterparse.sol":1474:1502  dut_PriceFeedUpdate_dataslot */
      dup3
        /* "testContract_afterparse.sol":1467:1525  mstore(dut_PriceFeedUpdate_dataslot,mload(price_xyz_slot)) */
      mstore
        /* "testContract_afterparse.sol":1599:1601  32 */
      0x20
        /* "testContract_afterparse.sol":1570:1598  dut_PriceFeedUpdate_dataslot */
      dup3
        /* "testContract_afterparse.sol":1561:1569  ONE_HOUR */
      0x0a
        /* "testContract_afterparse.sol":1537:1560  dut_PriceFeedUpdate_key */
      dup4
        /* "testContract_afterparse.sol":1529:1602  emitsig(dut_PriceFeedUpdate_key,ONE_HOUR,dut_PriceFeedUpdate_dataslot,32) */
      emitsig
        /* "testContract_afterparse.sol":1462:1609  {... */
      pop
      pop
      jump	// out
        /* "testContract_afterparse.sol":740:973  function what_ever() public{... */
    tag_23:
        /* "testContract_afterparse.sol":797:837  keccak256("what_ever_func(bytes32 obj)") */
      mload(0x40)
      dup1
      dup1
      0x776861745f657665725f66756e632862797465733332206f626a290000000000
      dup2
      mstore
      pop
      0x1b
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "testContract_afterparse.sol":777:794  what_ever_codePtr */
      0x03
        /* "testContract_afterparse.sol":777:837  what_ever_codePtr = keccak256("what_ever_func(bytes32 obj)") */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":930:952  what_ever_codePtr_slot */
      0x03
        /* "testContract_afterparse.sol":924:953  sload(what_ever_codePtr_slot) */
      sload
        /* "testContract_afterparse.sol":919:923  0x09 */
      0x09
        /* "testContract_afterparse.sol":915:918  100 */
      0x64
        /* "testContract_afterparse.sol":913:914  1 */
      0x01
        /* "testContract_afterparse.sol":910:912  32 */
      0x20
        /* "testContract_afterparse.sol":899:954  createslot(32,1,100,0x09,sload(what_ever_codePtr_slot)) */
      createslot
        /* "testContract_afterparse.sol":877:898  what_ever_status_slot */
      0x02
        /* "testContract_afterparse.sol":870:955  sstore(what_ever_status_slot,createslot(32,1,100,0x09,sload(what_ever_codePtr_slot))) */
      sstore
        /* "testContract_afterparse.sol":856:965  {... */
      jump	// out
        /* "testContract_afterparse.sol":702:734  bytes32 public what_ever_codePtr */
    tag_25:
      sload(0x03)
      dup2
      jump	// out
        /* "testContract_afterparse.sol":978:1044  function what_ever_func(bytes32 obj) public{... */
    tag_28:
        /* "testContract_afterparse.sol":1037:1040  obj */
      dup1
        /* "testContract_afterparse.sol":1025:1034  price_xyz */
      0x01
        /* "testContract_afterparse.sol":1025:1040  price_xyz = obj */
      dup2
      swap1
      sstore
      pop
        /* "testContract_afterparse.sol":978:1044  function what_ever_func(bytes32 obj) public{... */
      pop
      jump	// out

    auxdata: 0xa2646970667358221220f8d65aa67bbb92e092a84373b3a8fcb229df5093096505a53868c96cb4f395ba64736f6c63782b302e362e31312d646576656c6f702e323032302e372e322b636f6d6d69742e30643730623333312e6d6f64005c
}
