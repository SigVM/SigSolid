    /* "./feed/feed_parsed.sol":8932:11979  contract ReceiverB {... */
  mstore(0x40, 0x80)
    /* "./feed/feed_parsed.sol":10128:11113  constructor(address oracle_addr) public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
  mload(0x40)
  sub(codesize, bytecodeSize)
  dup1
  bytecodeSize
  dup4
  codecopy
  dup2
  dup2
  add
  0x40
  mstore
  0x20
  dup2
  lt
  iszero
  tag_2
  jumpi
  0x00
  dup1
  revert
tag_2:
  dup2
  add
  swap1
  dup1
  dup1
  mload
  swap1
  0x20
  add
  swap1
  swap3
  swap2
  swap1
  pop
  pop
  pop
    /* "./feed/feed_parsed.sol":10173:10187  RecievePrice() */
  tag_5
    /* "./feed/feed_parsed.sol":10173:10185  RecievePrice */
  shl(0x20, tag_6)
    /* "./feed/feed_parsed.sol":10173:10187  RecievePrice() */
  0x20
  shr
  jump	// in
tag_5:
    /* "./feed/feed_parsed.sol":10224:10235  oracle_addr */
  dup1
    /* "./feed/feed_parsed.sol":10197:10203  oracle */
  0x00
  dup1
    /* "./feed/feed_parsed.sol":10197:10236  oracle = PriceOracleBuffer(oracle_addr) */
  0x0100
  exp
  dup2
  sload
  dup2
  0xffffffffffffffffffffffffffffffffffffffff
  mul
  not
  and
  swap1
  dup4
  0xffffffffffffffffffffffffffffffffffffffff
  and
  mul
  or
  swap1
  sstore
  pop
    /* "./feed/feed_parsed.sol":10500:10531  address oracle_bindslot_address */
  0x00
    /* "./feed/feed_parsed.sol":10542:10548  oracle */
  dup1
  0x00
  swap1
  sload
  swap1
  0x0100
  exp
  swap1
  div
  0xffffffffffffffffffffffffffffffffffffffff
  and
    /* "./feed/feed_parsed.sol":10500:10549  address oracle_bindslot_address = address(oracle) */
  swap1
  pop
    /* "./feed/feed_parsed.sol":10601:10644  bytes32 oracle_bindslot_PriceFeedUpdate_key */
  0x00
    /* "./feed/feed_parsed.sol":10647:10677  keccak256("PriceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x5072696365466565645570646174652829000000000000000000000000000000
  dup2
  mstore
  pop
  0x11
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "./feed/feed_parsed.sol":10601:10677  bytes32 oracle_bindslot_PriceFeedUpdate_key = keccak256("PriceFeedUpdate()") */
  swap1
  pop
    /* "./feed/feed_parsed.sol":10734:10779  bytes32 this_oracle_bindslot_RecievePrice_key */
  0x00
    /* "./feed/feed_parsed.sol":10782:10804  get_RecievePrice_key() */
  tag_7
    /* "./feed/feed_parsed.sol":10782:10802  get_RecievePrice_key */
  shl(0x20, tag_8)
    /* "./feed/feed_parsed.sol":10782:10804  get_RecievePrice_key() */
  0x20
  shr
  jump	// in
tag_7:
    /* "./feed/feed_parsed.sol":10734:10804  bytes32 this_oracle_bindslot_RecievePrice_key = get_RecievePrice_key() */
  swap1
  pop
    /* "./feed/feed_parsed.sol":10953:10990  this_oracle_bindslot_RecievePrice_key */
  dup1
    /* "./feed/feed_parsed.sol":10916:10951  oracle_bindslot_PriceFeedUpdate_key */
  dup3
    /* "./feed/feed_parsed.sol":10891:10914  oracle_bindslot_address */
  dup5
    /* "./feed/feed_parsed.sol":10882:10991  bindslot(oracle_bindslot_address, oracle_bindslot_PriceFeedUpdate_key, this_oracle_bindslot_RecievePrice_key) */
  bindslot
    /* "./feed/feed_parsed.sol":10876:10880  0x40 */
  0x40
    /* "./feed/feed_parsed.sol":10869:10992  mstore(0x40, bindslot(oracle_bindslot_address, oracle_bindslot_PriceFeedUpdate_key, this_oracle_bindslot_RecievePrice_key)) */
  mstore
    /* "./feed/feed_parsed.sol":10864:10999  {... */
  pop
  pop
  pop
  pop
    /* "./feed/feed_parsed.sol":8932:11979  contract ReceiverB {... */
  jump(tag_9)
    /* "./feed/feed_parsed.sol":9570:9804  function RecievePrice() private {... */
tag_6:
    /* "./feed/feed_parsed.sol":9631:9667  keccak256("RecievePrice_func(uint)") */
  mload(0x40)
  dup1
  dup1
  0x5265636965766550726963655f66756e632875696e7429000000000000000000
  dup2
  mstore
  pop
  0x17
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "./feed/feed_parsed.sol":9612:9628  RecievePrice_key */
  0x03
    /* "./feed/feed_parsed.sol":9612:9667  RecievePrice_key = keccak256("RecievePrice_func(uint)") */
  dup2
  swap1
  sstore
  pop
    /* "./feed/feed_parsed.sol":9764:9785  RecievePrice_key_slot */
  0x03
    /* "./feed/feed_parsed.sol":9758:9786  sload(RecievePrice_key_slot) */
  sload
    /* "./feed/feed_parsed.sol":9751:9756  30000 */
  0x7530
    /* "./feed/feed_parsed.sol":9747:9749  10 */
  0x0a
    /* "./feed/feed_parsed.sol":9744:9745  1 */
  0x01
    /* "./feed/feed_parsed.sol":9733:9787  createslot(1, 10, 30000, sload(RecievePrice_key_slot)) */
  createslot
    /* "./feed/feed_parsed.sol":9707:9731  RecievePrice_status_slot */
  0x02
    /* "./feed/feed_parsed.sol":9700:9788  sstore(RecievePrice_status_slot, createslot(1, 10, 30000, sload(RecievePrice_key_slot))) */
  sstore
    /* "./feed/feed_parsed.sol":9686:9798  {... */
  jump	// out
    /* "./feed/feed_parsed.sol":9368:9473  function get_RecievePrice_key() public view returns (bytes32 key) {... */
tag_8:
    /* "./feed/feed_parsed.sol":9421:9432  bytes32 key */
  0x00
    /* "./feed/feed_parsed.sol":9450:9466  RecievePrice_key */
  sload(0x03)
    /* "./feed/feed_parsed.sol":9443:9466  return RecievePrice_key */
  swap1
  pop
    /* "./feed/feed_parsed.sol":9368:9473  function get_RecievePrice_key() public view returns (bytes32 key) {... */
  swap1
  jump	// out
    /* "./feed/feed_parsed.sol":8932:11979  contract ReceiverB {... */
tag_9:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "./feed/feed_parsed.sol":8932:11979  contract ReceiverB {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x0df5f14a
      eq
      tag_3
      jumpi
      dup1
      0x1b4fe37b
      eq
      tag_4
      jumpi
      dup1
      0x225435c0
      eq
      tag_5
      jumpi
      dup1
      0x7dc0d1d0
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "./feed/feed_parsed.sol":10038:10122  function RecievePrice_func(uint new_price) public {... */
    tag_3:
      tag_7
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_8
      jumpi
      0x00
      dup1
      revert
    tag_8:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_9
      jump	// in
    tag_7:
      stop
        /* "./feed/feed_parsed.sol":9368:9473  function get_RecievePrice_key() public view returns (bytes32 key) {... */
    tag_4:
      tag_10
      tag_11
      jump	// in
    tag_10:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":11123:11977  function detach() public {... */
    tag_5:
      tag_12
      tag_13
      jump	// in
    tag_12:
      stop
        /* "./feed/feed_parsed.sol":8962:8993  PriceOracleBuffer public oracle */
    tag_6:
      tag_14
      tag_15
      jump	// in
    tag_14:
      mload(0x40)
      dup1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":10038:10122  function RecievePrice_func(uint new_price) public {... */
    tag_9:
        /* "./feed/feed_parsed.sol":10106:10115  new_price */
      dup1
        /* "./feed/feed_parsed.sol":10098:10103  price */
      0x01
        /* "./feed/feed_parsed.sol":10098:10115  price = new_price */
      dup2
      swap1
      sstore
      pop
        /* "./feed/feed_parsed.sol":10038:10122  function RecievePrice_func(uint new_price) public {... */
      pop
      jump	// out
        /* "./feed/feed_parsed.sol":9368:9473  function get_RecievePrice_key() public view returns (bytes32 key) {... */
    tag_11:
        /* "./feed/feed_parsed.sol":9421:9432  bytes32 key */
      0x00
        /* "./feed/feed_parsed.sol":9450:9466  RecievePrice_key */
      sload(0x03)
        /* "./feed/feed_parsed.sol":9443:9466  return RecievePrice_key */
      swap1
      pop
        /* "./feed/feed_parsed.sol":9368:9473  function get_RecievePrice_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "./feed/feed_parsed.sol":11123:11977  function detach() public {... */
    tag_13:
        /* "./feed/feed_parsed.sol":11419:11460  bytes32 oracle_detach_PriceFeedUpdate_key */
      0x00
        /* "./feed/feed_parsed.sol":11463:11493  keccak256("PriceFeedUpdate()") */
      mload(0x40)
      dup1
      dup1
      0x5072696365466565645570646174652829000000000000000000000000000000
      dup2
      mstore
      pop
      0x11
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "./feed/feed_parsed.sol":11419:11493  bytes32 oracle_detach_PriceFeedUpdate_key = keccak256("PriceFeedUpdate()") */
      swap1
      pop
        /* "./feed/feed_parsed.sol":11524:11553  address oracle_detach_address */
      0x00
        /* "./feed/feed_parsed.sol":11564:11570  oracle */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "./feed/feed_parsed.sol":11524:11571  address oracle_detach_address = address(oracle) */
      swap1
      pop
        /* "./feed/feed_parsed.sol":11608:11653  bytes32 this_oracle_bindslot_RecievePrice_key */
      0x00
        /* "./feed/feed_parsed.sol":11656:11678  get_RecievePrice_key() */
      tag_19
        /* "./feed/feed_parsed.sol":11656:11676  get_RecievePrice_key */
      tag_11
        /* "./feed/feed_parsed.sol":11656:11678  get_RecievePrice_key() */
      jump	// in
    tag_19:
        /* "./feed/feed_parsed.sol":11608:11678  bytes32 this_oracle_bindslot_RecievePrice_key = get_RecievePrice_key() */
      swap1
      pop
        /* "./feed/feed_parsed.sol":11820:11857  this_oracle_bindslot_RecievePrice_key */
      dup1
        /* "./feed/feed_parsed.sol":11785:11818  oracle_detach_PriceFeedUpdate_key */
      dup4
        /* "./feed/feed_parsed.sol":11762:11783  oracle_detach_address */
      dup4
        /* "./feed/feed_parsed.sol":11751:11858  detachslot(oracle_detach_address, oracle_detach_PriceFeedUpdate_key, this_oracle_bindslot_RecievePrice_key) */
      detachslot
        /* "./feed/feed_parsed.sol":11745:11749  0x40 */
      0x40
        /* "./feed/feed_parsed.sol":11738:11859  mstore(0x40, detachslot(oracle_detach_address, oracle_detach_PriceFeedUpdate_key, this_oracle_bindslot_RecievePrice_key)) */
      mstore
        /* "./feed/feed_parsed.sol":11733:11863  {... */
      pop
      pop
      pop
      jump	// out
        /* "./feed/feed_parsed.sol":8962:8993  PriceOracleBuffer public oracle */
    tag_15:
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      jump	// out

    auxdata: 0xa2646970667358221220305d4905688394efcb18035d4962078515bcbfc05d9df6e1fa7e24638cbf27d264736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
