    /* "./feed/feed_parsed.sol":8910:11958  contract ReceiverB {... */
  mstore(0x40, 0x80)
    /* "./feed/feed_parsed.sol":10107:11092  constructor(address oracle_addr) public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
  mload(0x40)
  sub(codesize, bytecodeSize)
  dup1
  bytecodeSize
  dup4
  codecopy
  dup2
  dup2
  add
  0x40
  mstore
  0x20
  dup2
  lt
  iszero
  tag_2
  jumpi
  0x00
  dup1
  revert
tag_2:
  dup2
  add
  swap1
  dup1
  dup1
  mload
  swap1
  0x20
  add
  swap1
  swap3
  swap2
  swap1
  pop
  pop
  pop
    /* "./feed/feed_parsed.sol":10152:10166  RecievePrice() */
  tag_5
    /* "./feed/feed_parsed.sol":10152:10164  RecievePrice */
  shl(0x20, tag_6)
    /* "./feed/feed_parsed.sol":10152:10166  RecievePrice() */
  0x20
  shr
  jump	// in
tag_5:
    /* "./feed/feed_parsed.sol":10203:10214  oracle_addr */
  dup1
    /* "./feed/feed_parsed.sol":10176:10182  oracle */
  0x00
  dup1
    /* "./feed/feed_parsed.sol":10176:10215  oracle = PriceOracleBuffer(oracle_addr) */
  0x0100
  exp
  dup2
  sload
  dup2
  0xffffffffffffffffffffffffffffffffffffffff
  mul
  not
  and
  swap1
  dup4
  0xffffffffffffffffffffffffffffffffffffffff
  and
  mul
  or
  swap1
  sstore
  pop
    /* "./feed/feed_parsed.sol":10479:10510  address oracle_bindslot_address */
  0x00
    /* "./feed/feed_parsed.sol":10521:10527  oracle */
  dup1
  0x00
  swap1
  sload
  swap1
  0x0100
  exp
  swap1
  div
  0xffffffffffffffffffffffffffffffffffffffff
  and
    /* "./feed/feed_parsed.sol":10479:10528  address oracle_bindslot_address = address(oracle) */
  swap1
  pop
    /* "./feed/feed_parsed.sol":10580:10623  bytes32 oracle_bindslot_PriceFeedUpdate_key */
  0x00
    /* "./feed/feed_parsed.sol":10626:10656  keccak256("PriceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x5072696365466565645570646174652829000000000000000000000000000000
  dup2
  mstore
  pop
  0x11
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "./feed/feed_parsed.sol":10580:10656  bytes32 oracle_bindslot_PriceFeedUpdate_key = keccak256("PriceFeedUpdate()") */
  swap1
  pop
    /* "./feed/feed_parsed.sol":10713:10758  bytes32 this_oracle_bindslot_RecievePrice_key */
  0x00
    /* "./feed/feed_parsed.sol":10761:10783  get_RecievePrice_key() */
  tag_7
    /* "./feed/feed_parsed.sol":10761:10781  get_RecievePrice_key */
  shl(0x20, tag_8)
    /* "./feed/feed_parsed.sol":10761:10783  get_RecievePrice_key() */
  0x20
  shr
  jump	// in
tag_7:
    /* "./feed/feed_parsed.sol":10713:10783  bytes32 this_oracle_bindslot_RecievePrice_key = get_RecievePrice_key() */
  swap1
  pop
    /* "./feed/feed_parsed.sol":10932:10969  this_oracle_bindslot_RecievePrice_key */
  dup1
    /* "./feed/feed_parsed.sol":10895:10930  oracle_bindslot_PriceFeedUpdate_key */
  dup3
    /* "./feed/feed_parsed.sol":10870:10893  oracle_bindslot_address */
  dup5
    /* "./feed/feed_parsed.sol":10861:10970  bindslot(oracle_bindslot_address, oracle_bindslot_PriceFeedUpdate_key, this_oracle_bindslot_RecievePrice_key) */
  bindslot
    /* "./feed/feed_parsed.sol":10855:10859  0x40 */
  0x40
    /* "./feed/feed_parsed.sol":10848:10971  mstore(0x40, bindslot(oracle_bindslot_address, oracle_bindslot_PriceFeedUpdate_key, this_oracle_bindslot_RecievePrice_key)) */
  mstore
    /* "./feed/feed_parsed.sol":10843:10978  {... */
  pop
  pop
  pop
  pop
    /* "./feed/feed_parsed.sol":8910:11958  contract ReceiverB {... */
  jump(tag_9)
    /* "./feed/feed_parsed.sol":9548:9783  function RecievePrice() private {... */
tag_6:
    /* "./feed/feed_parsed.sol":9609:9645  keccak256("RecievePrice_func(uint)") */
  mload(0x40)
  dup1
  dup1
  0x5265636965766550726963655f66756e632875696e7429000000000000000000
  dup2
  mstore
  pop
  0x17
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "./feed/feed_parsed.sol":9590:9606  RecievePrice_key */
  0x03
    /* "./feed/feed_parsed.sol":9590:9645  RecievePrice_key = keccak256("RecievePrice_func(uint)") */
  dup2
  swap1
  sstore
  pop
    /* "./feed/feed_parsed.sol":9743:9764  RecievePrice_key_slot */
  0x03
    /* "./feed/feed_parsed.sol":9737:9765  sload(RecievePrice_key_slot) */
  sload
    /* "./feed/feed_parsed.sol":9730:9735  30000 */
  0x7530
    /* "./feed/feed_parsed.sol":9726:9728  10 */
  0x0a
    /* "./feed/feed_parsed.sol":9722:9724  32 */
  0x20
    /* "./feed/feed_parsed.sol":9711:9766  createslot(32, 10, 30000, sload(RecievePrice_key_slot)) */
  createslot
    /* "./feed/feed_parsed.sol":9685:9709  RecievePrice_status_slot */
  0x02
    /* "./feed/feed_parsed.sol":9678:9767  sstore(RecievePrice_status_slot, createslot(32, 10, 30000, sload(RecievePrice_key_slot))) */
  sstore
    /* "./feed/feed_parsed.sol":9664:9777  {... */
  jump	// out
    /* "./feed/feed_parsed.sol":9346:9451  function get_RecievePrice_key() public view returns (bytes32 key) {... */
tag_8:
    /* "./feed/feed_parsed.sol":9399:9410  bytes32 key */
  0x00
    /* "./feed/feed_parsed.sol":9428:9444  RecievePrice_key */
  sload(0x03)
    /* "./feed/feed_parsed.sol":9421:9444  return RecievePrice_key */
  swap1
  pop
    /* "./feed/feed_parsed.sol":9346:9451  function get_RecievePrice_key() public view returns (bytes32 key) {... */
  swap1
  jump	// out
    /* "./feed/feed_parsed.sol":8910:11958  contract ReceiverB {... */
tag_9:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "./feed/feed_parsed.sol":8910:11958  contract ReceiverB {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x0df5f14a
      eq
      tag_3
      jumpi
      dup1
      0x1b4fe37b
      eq
      tag_4
      jumpi
      dup1
      0x225435c0
      eq
      tag_5
      jumpi
      dup1
      0x7dc0d1d0
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "./feed/feed_parsed.sol":10017:10101  function RecievePrice_func(uint new_price) public {... */
    tag_3:
      tag_7
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_8
      jumpi
      0x00
      dup1
      revert
    tag_8:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_9
      jump	// in
    tag_7:
      stop
        /* "./feed/feed_parsed.sol":9346:9451  function get_RecievePrice_key() public view returns (bytes32 key) {... */
    tag_4:
      tag_10
      tag_11
      jump	// in
    tag_10:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":11102:11956  function detach() public {... */
    tag_5:
      tag_12
      tag_13
      jump	// in
    tag_12:
      stop
        /* "./feed/feed_parsed.sol":8940:8971  PriceOracleBuffer public oracle */
    tag_6:
      tag_14
      tag_15
      jump	// in
    tag_14:
      mload(0x40)
      dup1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":10017:10101  function RecievePrice_func(uint new_price) public {... */
    tag_9:
        /* "./feed/feed_parsed.sol":10085:10094  new_price */
      dup1
        /* "./feed/feed_parsed.sol":10077:10082  price */
      0x01
        /* "./feed/feed_parsed.sol":10077:10094  price = new_price */
      dup2
      swap1
      sstore
      pop
        /* "./feed/feed_parsed.sol":10017:10101  function RecievePrice_func(uint new_price) public {... */
      pop
      jump	// out
        /* "./feed/feed_parsed.sol":9346:9451  function get_RecievePrice_key() public view returns (bytes32 key) {... */
    tag_11:
        /* "./feed/feed_parsed.sol":9399:9410  bytes32 key */
      0x00
        /* "./feed/feed_parsed.sol":9428:9444  RecievePrice_key */
      sload(0x03)
        /* "./feed/feed_parsed.sol":9421:9444  return RecievePrice_key */
      swap1
      pop
        /* "./feed/feed_parsed.sol":9346:9451  function get_RecievePrice_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "./feed/feed_parsed.sol":11102:11956  function detach() public {... */
    tag_13:
        /* "./feed/feed_parsed.sol":11398:11439  bytes32 oracle_detach_PriceFeedUpdate_key */
      0x00
        /* "./feed/feed_parsed.sol":11442:11472  keccak256("PriceFeedUpdate()") */
      mload(0x40)
      dup1
      dup1
      0x5072696365466565645570646174652829000000000000000000000000000000
      dup2
      mstore
      pop
      0x11
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "./feed/feed_parsed.sol":11398:11472  bytes32 oracle_detach_PriceFeedUpdate_key = keccak256("PriceFeedUpdate()") */
      swap1
      pop
        /* "./feed/feed_parsed.sol":11503:11532  address oracle_detach_address */
      0x00
        /* "./feed/feed_parsed.sol":11543:11549  oracle */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "./feed/feed_parsed.sol":11503:11550  address oracle_detach_address = address(oracle) */
      swap1
      pop
        /* "./feed/feed_parsed.sol":11587:11632  bytes32 this_oracle_bindslot_RecievePrice_key */
      0x00
        /* "./feed/feed_parsed.sol":11635:11657  get_RecievePrice_key() */
      tag_19
        /* "./feed/feed_parsed.sol":11635:11655  get_RecievePrice_key */
      tag_11
        /* "./feed/feed_parsed.sol":11635:11657  get_RecievePrice_key() */
      jump	// in
    tag_19:
        /* "./feed/feed_parsed.sol":11587:11657  bytes32 this_oracle_bindslot_RecievePrice_key = get_RecievePrice_key() */
      swap1
      pop
        /* "./feed/feed_parsed.sol":11799:11836  this_oracle_bindslot_RecievePrice_key */
      dup1
        /* "./feed/feed_parsed.sol":11764:11797  oracle_detach_PriceFeedUpdate_key */
      dup4
        /* "./feed/feed_parsed.sol":11741:11762  oracle_detach_address */
      dup4
        /* "./feed/feed_parsed.sol":11730:11837  detachslot(oracle_detach_address, oracle_detach_PriceFeedUpdate_key, this_oracle_bindslot_RecievePrice_key) */
      detachslot
        /* "./feed/feed_parsed.sol":11724:11728  0x40 */
      0x40
        /* "./feed/feed_parsed.sol":11717:11838  mstore(0x40, detachslot(oracle_detach_address, oracle_detach_PriceFeedUpdate_key, this_oracle_bindslot_RecievePrice_key)) */
      mstore
        /* "./feed/feed_parsed.sol":11712:11842  {... */
      pop
      pop
      pop
      jump	// out
        /* "./feed/feed_parsed.sol":8940:8971  PriceOracleBuffer public oracle */
    tag_15:
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      jump	// out

    auxdata: 0xa264697066735822122061def9894f36e0b2186600d27149519b3ca9d45dcf2bde8b530293de507e822764736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
