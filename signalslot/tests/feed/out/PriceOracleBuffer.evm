    /* "./feed/feed_parsed.sol":26:5872  contract PriceOracleBuffer {... */
  mstore(0x40, 0x80)
    /* "./feed/feed_parsed.sol":3933:5870  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "./feed/feed_parsed.sol":3959:3976  PriceFeedUpdate() */
  tag_4
    /* "./feed/feed_parsed.sol":3959:3974  PriceFeedUpdate */
  shl(0x20, tag_5)
    /* "./feed/feed_parsed.sol":3959:3976  PriceFeedUpdate() */
  0x20
  shr
  jump	// in
tag_4:
    /* "./feed/feed_parsed.sol":3981:3993  SendUpdate() */
  tag_6
    /* "./feed/feed_parsed.sol":3981:3991  SendUpdate */
  shl(0x20, tag_7)
    /* "./feed/feed_parsed.sol":3981:3993  SendUpdate() */
  0x20
  shr
  jump	// in
tag_6:
    /* "./feed/feed_parsed.sol":4035:4036  0 */
  0x00
    /* "./feed/feed_parsed.sol":4021:4032  peeked_data */
  0x02
    /* "./feed/feed_parsed.sol":4021:4036  peeked_data = 0 */
  dup2
  swap1
  sstore
  pop
    /* "./feed/feed_parsed.sol":4296:4325  address this_bindslot_address */
  0x00
    /* "./feed/feed_parsed.sol":4336:4340  this */
  address
    /* "./feed/feed_parsed.sol":4296:4341  address this_bindslot_address = address(this) */
  swap1
  pop
    /* "./feed/feed_parsed.sol":4393:4434  bytes32 this_bindslot_PriceFeedUpdate_key */
  0x00
    /* "./feed/feed_parsed.sol":4437:4467  keccak256("PriceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x5072696365466565645570646174652829000000000000000000000000000000
  dup2
  mstore
  pop
  0x11
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "./feed/feed_parsed.sol":4393:4467  bytes32 this_bindslot_PriceFeedUpdate_key = keccak256("PriceFeedUpdate()") */
  swap1
  pop
    /* "./feed/feed_parsed.sol":4524:4565  bytes32 this_this_bindslot_SendUpdate_key */
  0x00
    /* "./feed/feed_parsed.sol":4568:4588  get_SendUpdate_key() */
  tag_8
    /* "./feed/feed_parsed.sol":4568:4586  get_SendUpdate_key */
  shl(0x20, tag_9)
    /* "./feed/feed_parsed.sol":4568:4588  get_SendUpdate_key() */
  0x20
  shr
  jump	// in
tag_8:
    /* "./feed/feed_parsed.sol":4524:4588  bytes32 this_this_bindslot_SendUpdate_key = get_SendUpdate_key() */
  swap1
  pop
    /* "./feed/feed_parsed.sol":4733:4766  this_this_bindslot_SendUpdate_key */
  dup1
    /* "./feed/feed_parsed.sol":4698:4731  this_bindslot_PriceFeedUpdate_key */
  dup3
    /* "./feed/feed_parsed.sol":4675:4696  this_bindslot_address */
  dup5
    /* "./feed/feed_parsed.sol":4666:4767  bindslot(this_bindslot_address, this_bindslot_PriceFeedUpdate_key, this_this_bindslot_SendUpdate_key) */
  bindslot
    /* "./feed/feed_parsed.sol":4660:4664  0x40 */
  0x40
    /* "./feed/feed_parsed.sol":4653:4768  mstore(0x40, bindslot(this_bindslot_address, this_bindslot_PriceFeedUpdate_key, this_this_bindslot_SendUpdate_key)) */
  mstore
    /* "./feed/feed_parsed.sol":5168:5195  set_PriceFeedUpdate_data(0) */
  tag_10
    /* "./feed/feed_parsed.sol":5193:5194  0 */
  0x00
    /* "./feed/feed_parsed.sol":5168:5192  set_PriceFeedUpdate_data */
  shl(0x20, tag_11)
    /* "./feed/feed_parsed.sol":5168:5195  set_PriceFeedUpdate_data(0) */
  0x20
  shr
  jump	// in
tag_10:
    /* "./feed/feed_parsed.sol":5239:5279  uint this_emitsig_PriceFeedUpdate_is_fix */
  0x00
    /* "./feed/feed_parsed.sol":5282:5310  get_PriceFeedUpdate_is_fix() */
  tag_12
    /* "./feed/feed_parsed.sol":5282:5308  get_PriceFeedUpdate_is_fix */
  shl(0x20, tag_13)
    /* "./feed/feed_parsed.sol":5282:5310  get_PriceFeedUpdate_is_fix() */
  0x20
  shr
  jump	// in
tag_12:
    /* "./feed/feed_parsed.sol":5239:5310  uint this_emitsig_PriceFeedUpdate_is_fix = get_PriceFeedUpdate_is_fix() */
  swap1
  pop
    /* "./feed/feed_parsed.sol":5343:5388  bytes32 this_emitsig_PriceFeedUpdate_dataslot */
  0x00
    /* "./feed/feed_parsed.sol":5391:5421  get_PriceFeedUpdate_dataslot() */
  tag_14
    /* "./feed/feed_parsed.sol":5391:5419  get_PriceFeedUpdate_dataslot */
  shl(0x20, tag_15)
    /* "./feed/feed_parsed.sol":5391:5421  get_PriceFeedUpdate_dataslot() */
  0x20
  shr
  jump	// in
tag_14:
    /* "./feed/feed_parsed.sol":5343:5421  bytes32 this_emitsig_PriceFeedUpdate_dataslot = get_PriceFeedUpdate_dataslot() */
  swap1
  pop
    /* "./feed/feed_parsed.sol":5455:5495  bytes32 this_emitsig_PriceFeedUpdate_key */
  0x00
    /* "./feed/feed_parsed.sol":5498:5523  get_PriceFeedUpdate_key() */
  tag_16
    /* "./feed/feed_parsed.sol":5498:5521  get_PriceFeedUpdate_key */
  shl(0x20, tag_17)
    /* "./feed/feed_parsed.sol":5498:5523  get_PriceFeedUpdate_key() */
  0x20
  shr
  jump	// in
tag_16:
    /* "./feed/feed_parsed.sol":5455:5523  bytes32 this_emitsig_PriceFeedUpdate_key = get_PriceFeedUpdate_key() */
  swap1
  pop
    /* "./feed/feed_parsed.sol":5712:5747  this_emitsig_PriceFeedUpdate_is_fix */
  dup3
    /* "./feed/feed_parsed.sol":5673:5710  this_emitsig_PriceFeedUpdate_dataslot */
  dup3
    /* "./feed/feed_parsed.sol":5670:5671  0 */
  0x00
    /* "./feed/feed_parsed.sol":5636:5668  this_emitsig_PriceFeedUpdate_key */
  dup4
    /* "./feed/feed_parsed.sol":5628:5748  emitsig(this_emitsig_PriceFeedUpdate_key, 0, this_emitsig_PriceFeedUpdate_dataslot, this_emitsig_PriceFeedUpdate_is_fix) */
  emitsig
    /* "./feed/feed_parsed.sol":5622:5626  0x40 */
  0x40
    /* "./feed/feed_parsed.sol":5615:5749  mstore(0x40, emitsig(this_emitsig_PriceFeedUpdate_key, 0, this_emitsig_PriceFeedUpdate_dataslot, this_emitsig_PriceFeedUpdate_is_fix)) */
  mstore
    /* "./feed/feed_parsed.sol":5610:5756  {... */
  pop
  pop
  pop
  pop
  pop
  pop
    /* "./feed/feed_parsed.sol":26:5872  contract PriceOracleBuffer {... */
  jump(tag_18)
    /* "./feed/feed_parsed.sol":1387:1662  function PriceFeedUpdate() private {... */
tag_5:
    /* "./feed/feed_parsed.sol":1454:1484  keccak256("PriceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x5072696365466565645570646174652829000000000000000000000000000000
  dup2
  mstore
  pop
  0x11
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "./feed/feed_parsed.sol":1432:1451  PriceFeedUpdate_key */
  0x06
    /* "./feed/feed_parsed.sol":1432:1484  PriceFeedUpdate_key = keccak256("PriceFeedUpdate()") */
  dup2
  swap1
  sstore
  pop
    /* "./feed/feed_parsed.sol":1557:1581  PriceFeedUpdate_key_slot */
  0x06
    /* "./feed/feed_parsed.sol":1551:1582  sload(PriceFeedUpdate_key_slot) */
  sload
    /* "./feed/feed_parsed.sol":1548:1549  1 */
  0x01
    /* "./feed/feed_parsed.sol":1538:1583  createsig(1, sload(PriceFeedUpdate_key_slot)) */
  createsig
    /* "./feed/feed_parsed.sol":1509:1536  PriceFeedUpdate_status_slot */
  0x05
    /* "./feed/feed_parsed.sol":1502:1584  sstore(PriceFeedUpdate_status_slot, createsig(1, sload(PriceFeedUpdate_key_slot))) */
  sstore
    /* "./feed/feed_parsed.sol":1626:1651  PriceFeedUpdate_data_slot */
  0x03
    /* "./feed/feed_parsed.sol":1595:1624  PriceFeedUpdate_dataslot_slot */
  0x04
    /* "./feed/feed_parsed.sol":1588:1652  sstore(PriceFeedUpdate_dataslot_slot, PriceFeedUpdate_data_slot) */
  sstore
    /* "./feed/feed_parsed.sol":1497:1656  {... */
  jump	// out
    /* "./feed/feed_parsed.sol":2314:2538  function SendUpdate() private {... */
tag_7:
    /* "./feed/feed_parsed.sol":2371:2405  keccak256("SendUpdate_func(uint)") */
  mload(0x40)
  dup1
  dup1
  0x53656e645570646174655f66756e632875696e74290000000000000000000000
  dup2
  mstore
  pop
  0x15
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "./feed/feed_parsed.sol":2354:2368  SendUpdate_key */
  0x08
    /* "./feed/feed_parsed.sol":2354:2405  SendUpdate_key = keccak256("SendUpdate_func(uint)") */
  dup2
  swap1
  sstore
  pop
    /* "./feed/feed_parsed.sol":2500:2519  SendUpdate_key_slot */
  0x08
    /* "./feed/feed_parsed.sol":2494:2520  sload(SendUpdate_key_slot) */
  sload
    /* "./feed/feed_parsed.sol":2487:2492  30000 */
  0x7530
    /* "./feed/feed_parsed.sol":2483:2485  10 */
  0x0a
    /* "./feed/feed_parsed.sol":2480:2481  1 */
  0x01
    /* "./feed/feed_parsed.sol":2469:2521  createslot(1, 10, 30000, sload(SendUpdate_key_slot)) */
  createslot
    /* "./feed/feed_parsed.sol":2445:2467  SendUpdate_status_slot */
  0x07
    /* "./feed/feed_parsed.sol":2438:2522  sstore(SendUpdate_status_slot, createslot(1, 10, 30000, sload(SendUpdate_key_slot))) */
  sstore
    /* "./feed/feed_parsed.sol":2424:2532  {... */
  jump	// out
    /* "./feed/feed_parsed.sol":2118:2219  function get_SendUpdate_key() public view returns (bytes32 key) {... */
tag_9:
    /* "./feed/feed_parsed.sol":2169:2180  bytes32 key */
  0x00
    /* "./feed/feed_parsed.sol":2198:2212  SendUpdate_key */
  sload(0x08)
    /* "./feed/feed_parsed.sol":2191:2212  return SendUpdate_key */
  swap1
  pop
    /* "./feed/feed_parsed.sol":2118:2219  function get_SendUpdate_key() public view returns (bytes32 key) {... */
  swap1
  jump	// out
    /* "./feed/feed_parsed.sol":696:799  function set_PriceFeedUpdate_data(uint  dataSet) private {... */
tag_11:
    /* "./feed/feed_parsed.sol":785:792  dataSet */
  dup1
    /* "./feed/feed_parsed.sol":762:782  PriceFeedUpdate_data */
  0x03
    /* "./feed/feed_parsed.sol":762:792  PriceFeedUpdate_data = dataSet */
  dup2
  swap1
  sstore
  pop
    /* "./feed/feed_parsed.sol":696:799  function set_PriceFeedUpdate_data(uint  dataSet) private {... */
  pop
  jump	// out
    /* "./feed/feed_parsed.sol":832:928  function get_PriceFeedUpdate_is_fix() public pure returns (uint is_fix) {... */
tag_13:
    /* "./feed/feed_parsed.sol":891:902  uint is_fix */
  0x00
    /* "./feed/feed_parsed.sol":920:921  1 */
  0x01
    /* "./feed/feed_parsed.sol":913:921  return 1 */
  swap1
  pop
    /* "./feed/feed_parsed.sol":832:928  function get_PriceFeedUpdate_is_fix() public pure returns (uint is_fix) {... */
  swap1
  jump	// out
    /* "./feed/feed_parsed.sol":1099:1225  function get_PriceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
tag_15:
    /* "./feed/feed_parsed.sol":1160:1176  bytes32 dataslot */
  0x00
    /* "./feed/feed_parsed.sol":1194:1218  PriceFeedUpdate_dataslot */
  sload(0x04)
    /* "./feed/feed_parsed.sol":1187:1218  return PriceFeedUpdate_dataslot */
  swap1
  pop
    /* "./feed/feed_parsed.sol":1099:1225  function get_PriceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
  swap1
  jump	// out
    /* "./feed/feed_parsed.sol":957:1068  function get_PriceFeedUpdate_key() public view returns (bytes32 key) {... */
tag_17:
    /* "./feed/feed_parsed.sol":1013:1024  bytes32 key */
  0x00
    /* "./feed/feed_parsed.sol":1042:1061  PriceFeedUpdate_key */
  sload(0x06)
    /* "./feed/feed_parsed.sol":1035:1061  return PriceFeedUpdate_key */
  swap1
  pop
    /* "./feed/feed_parsed.sol":957:1068  function get_PriceFeedUpdate_key() public view returns (bytes32 key) {... */
  swap1
  jump	// out
    /* "./feed/feed_parsed.sol":26:5872  contract PriceOracleBuffer {... */
tag_18:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "./feed/feed_parsed.sol":26:5872  contract PriceOracleBuffer {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x166978b4
      eq
      tag_3
      jumpi
      dup1
      0x2ae59cbe
      eq
      tag_4
      jumpi
      dup1
      0x89506560
      eq
      tag_5
      jumpi
      dup1
      0xafbc4c0b
      eq
      tag_6
      jumpi
      dup1
      0xd69c5385
      eq
      tag_7
      jumpi
      dup1
      0xf5e22585
      eq
      tag_8
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "./feed/feed_parsed.sol":2118:2219  function get_SendUpdate_key() public view returns (bytes32 key) {... */
    tag_3:
      tag_9
      tag_10
      jump	// in
    tag_9:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":2770:3922  function SendUpdate_func(uint unused) public {... */
    tag_4:
      tag_11
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_12
      jumpi
      0x00
      dup1
      revert
    tag_12:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_13
      jump	// in
    tag_11:
      stop
        /* "./feed/feed_parsed.sol":64:108  uint public constant ONE_HOUR_CONFLUX = 7200 */
    tag_5:
      tag_14
      tag_15
      jump	// in
    tag_14:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":957:1068  function get_PriceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_6:
      tag_16
      tag_17
      jump	// in
    tag_16:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":1099:1225  function get_PriceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_7:
      tag_18
      tag_19
      jump	// in
    tag_18:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":832:928  function get_PriceFeedUpdate_is_fix() public pure returns (uint is_fix) {... */
    tag_8:
      tag_20
      tag_21
      jump	// in
    tag_20:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./feed/feed_parsed.sol":2118:2219  function get_SendUpdate_key() public view returns (bytes32 key) {... */
    tag_10:
        /* "./feed/feed_parsed.sol":2169:2180  bytes32 key */
      0x00
        /* "./feed/feed_parsed.sol":2198:2212  SendUpdate_key */
      sload(0x08)
        /* "./feed/feed_parsed.sol":2191:2212  return SendUpdate_key */
      swap1
      pop
        /* "./feed/feed_parsed.sol":2118:2219  function get_SendUpdate_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "./feed/feed_parsed.sol":2770:3922  function SendUpdate_func(uint unused) public {... */
    tag_13:
        /* "./feed/feed_parsed.sol":2853:2854  1 */
      0x01
        /* "./feed/feed_parsed.sol":2839:2850  peeked_data */
      sload(0x02)
        /* "./feed/feed_parsed.sol":2839:2854  peeked_data + 1 */
      add
        /* "./feed/feed_parsed.sol":2825:2836  peeked_data */
      0x02
        /* "./feed/feed_parsed.sol":2825:2854  peeked_data = peeked_data + 1 */
      dup2
      swap1
      sstore
      pop
        /* "./feed/feed_parsed.sol":2870:2873  nxt */
      sload(0x01)
        /* "./feed/feed_parsed.sol":2864:2867  cur */
      0x00
        /* "./feed/feed_parsed.sol":2864:2873  cur = nxt */
      dup2
      swap1
      sstore
      pop
        /* "./feed/feed_parsed.sol":2889:2900  peeked_data */
      sload(0x02)
        /* "./feed/feed_parsed.sol":2883:2886  nxt */
      0x01
        /* "./feed/feed_parsed.sol":2883:2900  nxt = peeked_data */
      dup2
      swap1
      sstore
      pop
        /* "./feed/feed_parsed.sol":3203:3232  set_PriceFeedUpdate_data(cur) */
      tag_24
        /* "./feed/feed_parsed.sol":3228:3231  cur */
      sload(0x00)
        /* "./feed/feed_parsed.sol":3203:3227  set_PriceFeedUpdate_data */
      tag_25
        /* "./feed/feed_parsed.sol":3203:3232  set_PriceFeedUpdate_data(cur) */
      jump	// in
    tag_24:
        /* "./feed/feed_parsed.sol":3276:3316  uint this_emitsig_PriceFeedUpdate_is_fix */
      0x00
        /* "./feed/feed_parsed.sol":3319:3347  get_PriceFeedUpdate_is_fix() */
      tag_26
        /* "./feed/feed_parsed.sol":3319:3345  get_PriceFeedUpdate_is_fix */
      tag_21
        /* "./feed/feed_parsed.sol":3319:3347  get_PriceFeedUpdate_is_fix() */
      jump	// in
    tag_26:
        /* "./feed/feed_parsed.sol":3276:3347  uint this_emitsig_PriceFeedUpdate_is_fix = get_PriceFeedUpdate_is_fix() */
      swap1
      pop
        /* "./feed/feed_parsed.sol":3380:3425  bytes32 this_emitsig_PriceFeedUpdate_dataslot */
      0x00
        /* "./feed/feed_parsed.sol":3428:3458  get_PriceFeedUpdate_dataslot() */
      tag_27
        /* "./feed/feed_parsed.sol":3428:3456  get_PriceFeedUpdate_dataslot */
      tag_19
        /* "./feed/feed_parsed.sol":3428:3458  get_PriceFeedUpdate_dataslot() */
      jump	// in
    tag_27:
        /* "./feed/feed_parsed.sol":3380:3458  bytes32 this_emitsig_PriceFeedUpdate_dataslot = get_PriceFeedUpdate_dataslot() */
      swap1
      pop
        /* "./feed/feed_parsed.sol":3492:3532  bytes32 this_emitsig_PriceFeedUpdate_key */
      0x00
        /* "./feed/feed_parsed.sol":3535:3560  get_PriceFeedUpdate_key() */
      tag_28
        /* "./feed/feed_parsed.sol":3535:3558  get_PriceFeedUpdate_key */
      tag_17
        /* "./feed/feed_parsed.sol":3535:3560  get_PriceFeedUpdate_key() */
      jump	// in
    tag_28:
        /* "./feed/feed_parsed.sol":3492:3560  bytes32 this_emitsig_PriceFeedUpdate_key = get_PriceFeedUpdate_key() */
      swap1
      pop
        /* "./feed/feed_parsed.sol":3764:3799  this_emitsig_PriceFeedUpdate_is_fix */
      dup3
        /* "./feed/feed_parsed.sol":3725:3762  this_emitsig_PriceFeedUpdate_dataslot */
      dup3
        /* "./feed/feed_parsed.sol":3707:3723  ONE_HOUR_CONFLUX */
      0x1c20
        /* "./feed/feed_parsed.sol":3673:3705  this_emitsig_PriceFeedUpdate_key */
      dup4
        /* "./feed/feed_parsed.sol":3665:3800  emitsig(this_emitsig_PriceFeedUpdate_key, ONE_HOUR_CONFLUX, this_emitsig_PriceFeedUpdate_dataslot, this_emitsig_PriceFeedUpdate_is_fix) */
      emitsig
        /* "./feed/feed_parsed.sol":3659:3663  0x40 */
      0x40
        /* "./feed/feed_parsed.sol":3652:3801  mstore(0x40, emitsig(this_emitsig_PriceFeedUpdate_key, ONE_HOUR_CONFLUX, this_emitsig_PriceFeedUpdate_dataslot, this_emitsig_PriceFeedUpdate_is_fix)) */
      mstore
        /* "./feed/feed_parsed.sol":3647:3808  {... */
      pop
      pop
      pop
      pop
      jump	// out
        /* "./feed/feed_parsed.sol":64:108  uint public constant ONE_HOUR_CONFLUX = 7200 */
    tag_15:
        /* "./feed/feed_parsed.sol":104:108  7200 */
      0x1c20
        /* "./feed/feed_parsed.sol":64:108  uint public constant ONE_HOUR_CONFLUX = 7200 */
      dup2
      jump	// out
        /* "./feed/feed_parsed.sol":957:1068  function get_PriceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_17:
        /* "./feed/feed_parsed.sol":1013:1024  bytes32 key */
      0x00
        /* "./feed/feed_parsed.sol":1042:1061  PriceFeedUpdate_key */
      sload(0x06)
        /* "./feed/feed_parsed.sol":1035:1061  return PriceFeedUpdate_key */
      swap1
      pop
        /* "./feed/feed_parsed.sol":957:1068  function get_PriceFeedUpdate_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "./feed/feed_parsed.sol":1099:1225  function get_PriceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_19:
        /* "./feed/feed_parsed.sol":1160:1176  bytes32 dataslot */
      0x00
        /* "./feed/feed_parsed.sol":1194:1218  PriceFeedUpdate_dataslot */
      sload(0x04)
        /* "./feed/feed_parsed.sol":1187:1218  return PriceFeedUpdate_dataslot */
      swap1
      pop
        /* "./feed/feed_parsed.sol":1099:1225  function get_PriceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
      swap1
      jump	// out
        /* "./feed/feed_parsed.sol":832:928  function get_PriceFeedUpdate_is_fix() public pure returns (uint is_fix) {... */
    tag_21:
        /* "./feed/feed_parsed.sol":891:902  uint is_fix */
      0x00
        /* "./feed/feed_parsed.sol":920:921  1 */
      0x01
        /* "./feed/feed_parsed.sol":913:921  return 1 */
      swap1
      pop
        /* "./feed/feed_parsed.sol":832:928  function get_PriceFeedUpdate_is_fix() public pure returns (uint is_fix) {... */
      swap1
      jump	// out
        /* "./feed/feed_parsed.sol":696:799  function set_PriceFeedUpdate_data(uint  dataSet) private {... */
    tag_25:
        /* "./feed/feed_parsed.sol":785:792  dataSet */
      dup1
        /* "./feed/feed_parsed.sol":762:782  PriceFeedUpdate_data */
      0x03
        /* "./feed/feed_parsed.sol":762:792  PriceFeedUpdate_data = dataSet */
      dup2
      swap1
      sstore
      pop
        /* "./feed/feed_parsed.sol":696:799  function set_PriceFeedUpdate_data(uint  dataSet) private {... */
      pop
      jump	// out

    auxdata: 0xa26469706673582212207bc53fe9c5f817ac8cb15b9614893cdbc71a6696c764936a51185555d0387d1964736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
