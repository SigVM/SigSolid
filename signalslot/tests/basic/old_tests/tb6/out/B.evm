    /* "signaltest_afterparse.sol":3908:6900  contract B {... */
  mstore(0x40, 0x80)
    /* "signaltest_afterparse.sol":6855:6898  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "signaltest_afterparse.sol":6881:6895  priceReceive() */
  tag_4
    /* "signaltest_afterparse.sol":6881:6893  priceReceive */
  shl(0x20, tag_5)
    /* "signaltest_afterparse.sol":6881:6895  priceReceive() */
  0x20
  shr
  jump	// in
tag_4:
    /* "signaltest_afterparse.sol":3908:6900  contract B {... */
  jump(tag_6)
    /* "signaltest_afterparse.sol":4555:4793  function priceReceive() private {... */
tag_5:
    /* "signaltest_afterparse.sol":4616:4655  keccak256("priceReceive_func(bytes32)") */
  mload(0x40)
  dup1
  dup1
  0x7072696365526563656976655f66756e63286279746573333229000000000000
  dup2
  mstore
  pop
  0x1a
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "signaltest_afterparse.sol":4597:4613  priceReceive_key */
  0x03
    /* "signaltest_afterparse.sol":4597:4655  priceReceive_key = keccak256("priceReceive_func(bytes32)") */
  dup2
  swap1
  sstore
  pop
    /* "signaltest_afterparse.sol":4753:4774  priceReceive_key_slot */
  0x03
    /* "signaltest_afterparse.sol":4747:4775  sload(priceReceive_key_slot) */
  sload
    /* "signaltest_afterparse.sol":4740:4745  30000 */
  0x7530
    /* "signaltest_afterparse.sol":4736:4738  10 */
  0x0a
    /* "signaltest_afterparse.sol":4732:4734  32 */
  0x20
    /* "signaltest_afterparse.sol":4721:4776  createslot(32, 10, 30000, sload(priceReceive_key_slot)) */
  createslot
    /* "signaltest_afterparse.sol":4695:4719  priceReceive_status_slot */
  0x02
    /* "signaltest_afterparse.sol":4688:4777  sstore(priceReceive_status_slot, createslot(32, 10, 30000, sload(priceReceive_key_slot))) */
  sstore
    /* "signaltest_afterparse.sol":4674:4787  {... */
  jump	// out
    /* "signaltest_afterparse.sol":3908:6900  contract B {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "signaltest_afterparse.sol":3908:6900  contract B {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x238227d9
      eq
      tag_4
      jumpi
      dup1
      0x395f9b8d
      eq
      tag_5
      jumpi
      dup1
      0x68c0b038
      eq
      tag_6
      jumpi
      dup1
      0x81b28b60
      eq
      tag_7
      jumpi
      dup1
      0x81daf21f
      eq
      tag_8
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "signaltest_afterparse.sol":3964:3999  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_9
      tag_10
      jump	// in
    tag_9:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":4353:4458  function get_priceReceive_key() public view returns (bytes32 key) {... */
    tag_4:
      tag_11
      tag_12
      jump	// in
    tag_11:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":5129:6010  function bindfunc() public view {... */
    tag_5:
      tag_13
      tag_14
      jump	// in
    tag_13:
      stop
        /* "signaltest_afterparse.sol":3930:3958  bytes32 public LocalPriceSum */
    tag_6:
      tag_15
      tag_16
      jump	// in
    tag_15:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_afterparse.sol":6016:6854  function detachfunc() public view {... */
    tag_7:
      tag_17
      tag_18
      jump	// in
    tag_17:
      stop
        /* "signaltest_afterparse.sol":5027:5126  function priceReceive_func(bytes32 obj) public {... */
    tag_8:
      tag_19
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_20
      jumpi
      0x00
      dup1
      revert
    tag_20:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_21
      jump	// in
    tag_19:
      stop
        /* "signaltest_afterparse.sol":3964:3999  uint public constant ONE_HOUR = 180 */
    tag_10:
        /* "signaltest_afterparse.sol":3996:3999  180 */
      0xb4
        /* "signaltest_afterparse.sol":3964:3999  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":4353:4458  function get_priceReceive_key() public view returns (bytes32 key) {... */
    tag_12:
        /* "signaltest_afterparse.sol":4406:4417  bytes32 key */
      0x00
        /* "signaltest_afterparse.sol":4435:4451  priceReceive_key */
      sload(0x03)
        /* "signaltest_afterparse.sol":4428:4451  return priceReceive_key */
      swap1
      pop
        /* "signaltest_afterparse.sol":4353:4458  function get_priceReceive_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "signaltest_afterparse.sol":5129:6010  function bindfunc() public view {... */
    tag_14:
        /* "signaltest_afterparse.sol":5422:5450  address dut_bindslot_address */
      0x00
        /* "signaltest_afterparse.sol":5461:5464  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":5422:5465  address dut_bindslot_address = address(dut) */
      swap1
      pop
        /* "signaltest_afterparse.sol":5517:5557  bytes32 dut_bindslot_priceFeedUpdate_key */
      0x00
        /* "signaltest_afterparse.sol":5560:5563  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":5560:5587  dut.get_priceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xbab3affe
        /* "signaltest_afterparse.sol":5560:5589  dut.get_priceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_24
      jumpi
      0x00
      dup1
      revert
    tag_24:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_26
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_26:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_27
      jumpi
      0x00
      dup1
      revert
    tag_27:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "signaltest_afterparse.sol":5517:5589  bytes32 dut_bindslot_priceFeedUpdate_key = dut.get_priceFeedUpdate_key() */
      swap1
      pop
        /* "signaltest_afterparse.sol":5646:5688  bytes32 this_dut_bindslot_priceReceive_key */
      0x00
        /* "signaltest_afterparse.sol":5691:5713  get_priceReceive_key() */
      tag_28
        /* "signaltest_afterparse.sol":5691:5711  get_priceReceive_key */
      tag_12
        /* "signaltest_afterparse.sol":5691:5713  get_priceReceive_key() */
      jump	// in
    tag_28:
        /* "signaltest_afterparse.sol":5646:5713  bytes32 this_dut_bindslot_priceReceive_key = get_priceReceive_key() */
      swap1
      pop
        /* "signaltest_afterparse.sol":5856:5890  this_dut_bindslot_priceReceive_key */
      dup1
        /* "signaltest_afterparse.sol":5822:5854  dut_bindslot_priceFeedUpdate_key */
      dup3
        /* "signaltest_afterparse.sol":5800:5820  dut_bindslot_address */
      dup5
        /* "signaltest_afterparse.sol":5791:5891  bindslot(dut_bindslot_address, dut_bindslot_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key) */
      bindslot
        /* "signaltest_afterparse.sol":5785:5789  0x40 */
      0x40
        /* "signaltest_afterparse.sol":5778:5892  mstore(0x40, bindslot(dut_bindslot_address, dut_bindslot_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key)) */
      mstore
        /* "signaltest_afterparse.sol":5773:5899  {... */
      pop
      pop
      pop
      jump	// out
        /* "signaltest_afterparse.sol":3930:3958  bytes32 public LocalPriceSum */
    tag_16:
      sload(0x01)
      dup2
      jump	// out
        /* "signaltest_afterparse.sol":6016:6854  function detachfunc() public view {... */
    tag_18:
        /* "signaltest_afterparse.sol":6318:6356  bytes32 dut_detach_priceFeedUpdate_key */
      0x00
        /* "signaltest_afterparse.sol":6359:6362  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":6359:6386  dut.get_priceFeedUpdate_key */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xbab3affe
        /* "signaltest_afterparse.sol":6359:6388  dut.get_priceFeedUpdate_key() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_30
      jumpi
      0x00
      dup1
      revert
    tag_30:
      pop
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_32
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_32:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_33
      jumpi
      0x00
      dup1
      revert
    tag_33:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "signaltest_afterparse.sol":6318:6388  bytes32 dut_detach_priceFeedUpdate_key = dut.get_priceFeedUpdate_key() */
      swap1
      pop
        /* "signaltest_afterparse.sol":6419:6445  address dut_detach_address */
      0x00
        /* "signaltest_afterparse.sol":6456:6459  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_afterparse.sol":6419:6460  address dut_detach_address = address(dut) */
      swap1
      pop
        /* "signaltest_afterparse.sol":6497:6539  bytes32 this_dut_bindslot_priceReceive_key */
      0x00
        /* "signaltest_afterparse.sol":6542:6564  get_priceReceive_key() */
      tag_34
        /* "signaltest_afterparse.sol":6542:6562  get_priceReceive_key */
      tag_12
        /* "signaltest_afterparse.sol":6542:6564  get_priceReceive_key() */
      jump	// in
    tag_34:
        /* "signaltest_afterparse.sol":6497:6564  bytes32 this_dut_bindslot_priceReceive_key = get_priceReceive_key() */
      swap1
      pop
        /* "signaltest_afterparse.sol":6700:6734  this_dut_bindslot_priceReceive_key */
      dup1
        /* "signaltest_afterparse.sol":6668:6698  dut_detach_priceFeedUpdate_key */
      dup4
        /* "signaltest_afterparse.sol":6648:6666  dut_detach_address */
      dup4
        /* "signaltest_afterparse.sol":6637:6735  detachslot(dut_detach_address, dut_detach_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key) */
      detachslot
        /* "signaltest_afterparse.sol":6631:6635  0x40 */
      0x40
        /* "signaltest_afterparse.sol":6624:6736  mstore(0x40, detachslot(dut_detach_address, dut_detach_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key)) */
      mstore
        /* "signaltest_afterparse.sol":6619:6740  {... */
      pop
      pop
      pop
      jump	// out
        /* "signaltest_afterparse.sol":5027:5126  function priceReceive_func(bytes32 obj) public {... */
    tag_21:
        /* "signaltest_afterparse.sol":5116:5119  obj */
      dup1
        /* "signaltest_afterparse.sol":5100:5113  LocalPriceSum */
      sload(0x01)
        /* "signaltest_afterparse.sol":5100:5119  LocalPriceSum | obj */
      or
        /* "signaltest_afterparse.sol":5084:5097  LocalPriceSum */
      0x01
        /* "signaltest_afterparse.sol":5084:5119  LocalPriceSum = LocalPriceSum | obj */
      dup2
      swap1
      sstore
      pop
        /* "signaltest_afterparse.sol":5027:5126  function priceReceive_func(bytes32 obj) public {... */
      pop
      jump	// out

    auxdata: 0xa2646970667358221220fb791e67411c568b9e995acbd485c34c628ac380954ee5245474aa3ac781b6cc64736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
