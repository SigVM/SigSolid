    /* "signaltest_parsed.sol":2779:5866  contract B {... */
  mstore(0x40, 0x80)
    /* "signaltest_parsed.sol":5821:5864  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "signaltest_parsed.sol":5847:5861  priceReceive() */
  tag_4
    /* "signaltest_parsed.sol":5847:5859  priceReceive */
  shl(0x20, tag_5)
    /* "signaltest_parsed.sol":5847:5861  priceReceive() */
  0x20
  shr
  jump	// in
tag_4:
    /* "signaltest_parsed.sol":2779:5866  contract B {... */
  jump(tag_6)
    /* "signaltest_parsed.sol":3424:3659  function priceReceive() private {... */
tag_5:
    /* "signaltest_parsed.sol":3485:3522  keccak256("priceReceive_func(bytes)") */
  mload(0x40)
  dup1
  dup1
  0x7072696365526563656976655f66756e63286279746573290000000000000000
  dup2
  mstore
  pop
  0x18
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "signaltest_parsed.sol":3466:3482  priceReceive_key */
  0x03
    /* "signaltest_parsed.sol":3466:3522  priceReceive_key = keccak256("priceReceive_func(bytes)") */
  dup2
  swap1
  sstore
  pop
    /* "signaltest_parsed.sol":3619:3640  priceReceive_key_slot */
  0x03
    /* "signaltest_parsed.sol":3613:3641  sload(priceReceive_key_slot) */
  sload
    /* "signaltest_parsed.sol":3606:3611  30000 */
  0x7530
    /* "signaltest_parsed.sol":3602:3604  10 */
  0x0a
    /* "signaltest_parsed.sol":3599:3600  0 */
  0x00
    /* "signaltest_parsed.sol":3588:3642  createslot(0, 10, 30000, sload(priceReceive_key_slot)) */
  createslot
    /* "signaltest_parsed.sol":3562:3586  priceReceive_status_slot */
  0x02
    /* "signaltest_parsed.sol":3555:3643  sstore(priceReceive_status_slot, createslot(0, 10, 30000, sload(priceReceive_key_slot))) */
  sstore
    /* "signaltest_parsed.sol":3541:3653  {... */
  jump	// out
    /* "signaltest_parsed.sol":2779:5866  contract B {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "signaltest_parsed.sol":2779:5866  contract B {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x68c0b038
      gt
      tag_10
      jumpi
      dup1
      0x68c0b038
      eq
      tag_6
      jumpi
      dup1
      0x781c92b3
      eq
      tag_7
      jumpi
      dup1
      0x81b28b60
      eq
      tag_8
      jumpi
      dup1
      0xca972e2f
      eq
      tag_9
      jumpi
      jump(tag_2)
    tag_10:
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x238227d9
      eq
      tag_4
      jumpi
      dup1
      0x456a0390
      eq
      tag_5
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "signaltest_parsed.sol":2833:2868  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_11
      tag_12
      jump	// in
    tag_11:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_parsed.sol":3222:3327  function get_priceReceive_key() public view returns (bytes32 key) {... */
    tag_4:
      tag_13
      tag_14
      jump	// in
    tag_13:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_parsed.sol":5735:5820  function getLocalPriceSum() public returns (bytes memory){... */
    tag_5:
      tag_15
      tag_16
      jump	// in
    tag_15:
      mload(0x40)
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      dup4
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_17:
      dup4
      dup2
      lt
      iszero
      tag_19
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_17)
    tag_19:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_20
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_20:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_parsed.sol":2801:2827  bytes public LocalPriceSum */
    tag_6:
      tag_21
      tag_22
      jump	// in
    tag_21:
      mload(0x40)
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      dup4
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
      0x00
    tag_23:
      dup4
      dup2
      lt
      iszero
      tag_25
      jumpi
      dup1
      dup3
      add
      mload
      dup2
      dup5
      add
      mstore
      0x20
      dup2
      add
      swap1
      pop
      jump(tag_23)
    tag_25:
      pop
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_26
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_26:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_parsed.sol":3984:4892  function bindfunc(address addrA) public {... */
    tag_7:
      tag_27
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_28
      jumpi
      0x00
      dup1
      revert
    tag_28:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_29
      jump	// in
    tag_27:
      stop
        /* "signaltest_parsed.sol":4898:5732  function detachfunc() public {... */
    tag_8:
      tag_30
      tag_31
      jump	// in
    tag_30:
      stop
        /* "signaltest_parsed.sol":3893:3981  function priceReceive_func(bytes memory obj) public {... */
    tag_9:
      tag_32
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_33
      jumpi
      0x00
      dup1
      revert
    tag_33:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      0x0100000000
      dup2
      gt
      iszero
      tag_34
      jumpi
      0x00
      dup1
      revert
    tag_34:
      dup3
      add
      dup4
      0x20
      dup3
      add
      gt
      iszero
      tag_35
      jumpi
      0x00
      dup1
      revert
    tag_35:
      dup1
      calldataload
      swap1
      0x20
      add
      swap2
      dup5
      0x01
      dup4
      mul
      dup5
      add
      gt
      0x0100000000
      dup4
      gt
      or
      iszero
      tag_36
      jumpi
      0x00
      dup1
      revert
    tag_36:
      swap2
      swap1
      dup1
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
      dup1
      dup3
      dup5
      calldatacopy
      0x00
      dup2
      dup5
      add
      mstore
      not(0x1f)
      0x1f
      dup3
      add
      and
      swap1
      pop
      dup1
      dup4
      add
      swap3
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      tag_37
      jump	// in
    tag_32:
      stop
        /* "signaltest_parsed.sol":2833:2868  uint public constant ONE_HOUR = 180 */
    tag_12:
        /* "signaltest_parsed.sol":2865:2868  180 */
      0xb4
        /* "signaltest_parsed.sol":2833:2868  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "signaltest_parsed.sol":3222:3327  function get_priceReceive_key() public view returns (bytes32 key) {... */
    tag_14:
        /* "signaltest_parsed.sol":3275:3286  bytes32 key */
      0x00
        /* "signaltest_parsed.sol":3304:3320  priceReceive_key */
      sload(0x03)
        /* "signaltest_parsed.sol":3297:3320  return priceReceive_key */
      swap1
      pop
        /* "signaltest_parsed.sol":3222:3327  function get_priceReceive_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "signaltest_parsed.sol":5735:5820  function getLocalPriceSum() public returns (bytes memory){... */
    tag_16:
        /* "signaltest_parsed.sol":5779:5791  bytes memory */
      0x60
        /* "signaltest_parsed.sol":5803:5816  LocalPriceSum */
      0x01
        /* "signaltest_parsed.sol":5796:5816  return LocalPriceSum */
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      iszero
      tag_40
      jumpi
      dup1
      0x1f
      lt
      tag_41
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_40)
    tag_41:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_42:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_42
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_40:
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "signaltest_parsed.sol":5735:5820  function getLocalPriceSum() public returns (bytes memory){... */
      swap1
      jump	// out
        /* "signaltest_parsed.sol":2801:2827  bytes public LocalPriceSum */
    tag_22:
      0x01
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      dup1
      iszero
      tag_43
      jumpi
      dup1
      0x1f
      lt
      tag_44
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_43)
    tag_44:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_45:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_45
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_43:
      pop
      pop
      pop
      pop
      pop
      dup2
      jump	// out
        /* "signaltest_parsed.sol":3984:4892  function bindfunc(address addrA) public {... */
    tag_29:
        /* "signaltest_parsed.sol":4036:4041  addrA */
      dup1
        /* "signaltest_parsed.sol":4028:4031  dut */
      0x00
      dup1
        /* "signaltest_parsed.sol":4028:4042  dut = A(addrA) */
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      mul
      not
      and
      swap1
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      mul
      or
      swap1
      sstore
      pop
        /* "signaltest_parsed.sol":4303:4331  address dut_bindslot_address */
      0x00
        /* "signaltest_parsed.sol":4342:4345  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_parsed.sol":4303:4346  address dut_bindslot_address = address(dut) */
      swap1
      pop
        /* "signaltest_parsed.sol":4398:4438  bytes32 dut_bindslot_priceFeedUpdate_key */
      0x00
        /* "signaltest_parsed.sol":4441:4471  keccak256("priceFeedUpdate()") */
      mload(0x40)
      dup1
      dup1
      0x7072696365466565645570646174652829000000000000000000000000000000
      dup2
      mstore
      pop
      0x11
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "signaltest_parsed.sol":4398:4471  bytes32 dut_bindslot_priceFeedUpdate_key = keccak256("priceFeedUpdate()") */
      swap1
      pop
        /* "signaltest_parsed.sol":4528:4570  bytes32 this_dut_bindslot_priceReceive_key */
      0x00
        /* "signaltest_parsed.sol":4573:4595  get_priceReceive_key() */
      tag_47
        /* "signaltest_parsed.sol":4573:4593  get_priceReceive_key */
      tag_14
        /* "signaltest_parsed.sol":4573:4595  get_priceReceive_key() */
      jump	// in
    tag_47:
        /* "signaltest_parsed.sol":4528:4595  bytes32 this_dut_bindslot_priceReceive_key = get_priceReceive_key() */
      swap1
      pop
        /* "signaltest_parsed.sol":4738:4772  this_dut_bindslot_priceReceive_key */
      dup1
        /* "signaltest_parsed.sol":4704:4736  dut_bindslot_priceFeedUpdate_key */
      dup3
        /* "signaltest_parsed.sol":4682:4702  dut_bindslot_address */
      dup5
        /* "signaltest_parsed.sol":4673:4773  bindslot(dut_bindslot_address, dut_bindslot_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key) */
      bindslot
        /* "signaltest_parsed.sol":4667:4671  0x40 */
      0x40
        /* "signaltest_parsed.sol":4660:4774  mstore(0x40, bindslot(dut_bindslot_address, dut_bindslot_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key)) */
      mstore
        /* "signaltest_parsed.sol":4655:4781  {... */
      pop
      pop
      pop
      pop
      jump	// out
        /* "signaltest_parsed.sol":4898:5732  function detachfunc() public {... */
    tag_31:
        /* "signaltest_parsed.sol":5195:5233  bytes32 dut_detach_priceFeedUpdate_key */
      0x00
        /* "signaltest_parsed.sol":5236:5266  keccak256("priceFeedUpdate()") */
      mload(0x40)
      dup1
      dup1
      0x7072696365466565645570646174652829000000000000000000000000000000
      dup2
      mstore
      pop
      0x11
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "signaltest_parsed.sol":5195:5266  bytes32 dut_detach_priceFeedUpdate_key = keccak256("priceFeedUpdate()") */
      swap1
      pop
        /* "signaltest_parsed.sol":5297:5323  address dut_detach_address */
      0x00
        /* "signaltest_parsed.sol":5334:5337  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "signaltest_parsed.sol":5297:5338  address dut_detach_address = address(dut) */
      swap1
      pop
        /* "signaltest_parsed.sol":5375:5417  bytes32 this_dut_bindslot_priceReceive_key */
      0x00
        /* "signaltest_parsed.sol":5420:5442  get_priceReceive_key() */
      tag_49
        /* "signaltest_parsed.sol":5420:5440  get_priceReceive_key */
      tag_14
        /* "signaltest_parsed.sol":5420:5442  get_priceReceive_key() */
      jump	// in
    tag_49:
        /* "signaltest_parsed.sol":5375:5442  bytes32 this_dut_bindslot_priceReceive_key = get_priceReceive_key() */
      swap1
      pop
        /* "signaltest_parsed.sol":5578:5612  this_dut_bindslot_priceReceive_key */
      dup1
        /* "signaltest_parsed.sol":5546:5576  dut_detach_priceFeedUpdate_key */
      dup4
        /* "signaltest_parsed.sol":5526:5544  dut_detach_address */
      dup4
        /* "signaltest_parsed.sol":5515:5613  detachslot(dut_detach_address, dut_detach_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key) */
      detachslot
        /* "signaltest_parsed.sol":5509:5513  0x40 */
      0x40
        /* "signaltest_parsed.sol":5502:5614  mstore(0x40, detachslot(dut_detach_address, dut_detach_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key)) */
      mstore
        /* "signaltest_parsed.sol":5497:5618  {... */
      pop
      pop
      pop
      jump	// out
        /* "signaltest_parsed.sol":3893:3981  function priceReceive_func(bytes memory obj) public {... */
    tag_37:
        /* "signaltest_parsed.sol":3971:3974  obj */
      dup1
        /* "signaltest_parsed.sol":3955:3968  LocalPriceSum */
      0x01
        /* "signaltest_parsed.sol":3955:3974  LocalPriceSum = obj */
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      tag_51
      swap3
      swap2
      swap1
      tag_52
      jump	// in
    tag_51:
      pop
        /* "signaltest_parsed.sol":3893:3981  function priceReceive_func(bytes memory obj) public {... */
      pop
      jump	// out
    tag_52:
      dup3
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      0x1f
      add
      0x20
      swap1
      div
      dup2
      add
      swap3
      dup3
      0x1f
      lt
      tag_54
      jumpi
      dup1
      mload
      not(0xff)
      and
      dup4
      dup1
      add
      or
      dup6
      sstore
      jump(tag_53)
    tag_54:
      dup3
      dup1
      add
      0x01
      add
      dup6
      sstore
      dup3
      iszero
      tag_53
      jumpi
      swap2
      dup3
      add
    tag_55:
      dup3
      dup2
      gt
      iszero
      tag_56
      jumpi
      dup3
      mload
      dup3
      sstore
      swap2
      0x20
      add
      swap2
      swap1
      0x01
      add
      swap1
      jump(tag_55)
    tag_56:
    tag_53:
      pop
      swap1
      pop
      tag_57
      swap2
      swap1
      tag_58
      jump	// in
    tag_57:
      pop
      swap1
      jump	// out
    tag_58:
      tag_59
      swap2
      swap1
    tag_60:
      dup1
      dup3
      gt
      iszero
      tag_61
      jumpi
      0x00
      dup2
      0x00
      swap1
      sstore
      pop
      0x01
      add
      jump(tag_60)
    tag_61:
      pop
      swap1
      jump
    tag_59:
      swap1
      jump	// out

    auxdata: 0xa2646970667358221220b95ce3438b232372acf1c91371b6dd18af90ba60151fd6b269732281dec8943064736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
