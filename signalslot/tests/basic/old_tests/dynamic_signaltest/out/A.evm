    /* "signaltest_parsed.sol":25:2777  contract A {... */
  mstore(0x40, 0x80)
    /* "signaltest_parsed.sol":2729:2775  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "signaltest_parsed.sol":2755:2772  priceFeedUpdate() */
  tag_4
    /* "signaltest_parsed.sol":2755:2770  priceFeedUpdate */
  shl(0x20, tag_5)
    /* "signaltest_parsed.sol":2755:2772  priceFeedUpdate() */
  0x20
  shr
  jump	// in
tag_4:
    /* "signaltest_parsed.sol":25:2777  contract A {... */
  jump(tag_6)
    /* "signaltest_parsed.sol":1300:1575  function priceFeedUpdate() private {... */
tag_5:
    /* "signaltest_parsed.sol":1367:1397  keccak256("priceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x7072696365466565645570646174652829000000000000000000000000000000
  dup2
  mstore
  pop
  0x11
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "signaltest_parsed.sol":1345:1364  priceFeedUpdate_key */
  0x04
    /* "signaltest_parsed.sol":1345:1397  priceFeedUpdate_key = keccak256("priceFeedUpdate()") */
  dup2
  swap1
  sstore
  pop
    /* "signaltest_parsed.sol":1470:1494  priceFeedUpdate_key_slot */
  0x04
    /* "signaltest_parsed.sol":1464:1495  sload(priceFeedUpdate_key_slot) */
  sload
    /* "signaltest_parsed.sol":1461:1462  0 */
  0x00
    /* "signaltest_parsed.sol":1451:1496  createsig(0, sload(priceFeedUpdate_key_slot)) */
  createsig
    /* "signaltest_parsed.sol":1422:1449  priceFeedUpdate_status_slot */
  0x03
    /* "signaltest_parsed.sol":1415:1497  sstore(priceFeedUpdate_status_slot, createsig(0, sload(priceFeedUpdate_key_slot))) */
  sstore
    /* "signaltest_parsed.sol":1539:1564  priceFeedUpdate_data_slot */
  0x01
    /* "signaltest_parsed.sol":1508:1537  priceFeedUpdate_dataslot_slot */
  0x02
    /* "signaltest_parsed.sol":1501:1565  sstore(priceFeedUpdate_dataslot_slot, priceFeedUpdate_data_slot) */
  sstore
    /* "signaltest_parsed.sol":1410:1569  {... */
  jump	// out
    /* "signaltest_parsed.sol":25:2777  contract A {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "signaltest_parsed.sol":25:2777  contract A {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x3e4fe9a4
      eq
      tag_4
      jumpi
      dup1
      0xa5621a66
      eq
      tag_5
      jumpi
      dup1
      0xbab3affe
      eq
      tag_6
      jumpi
      dup1
      0xfd5e127c
      eq
      tag_7
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_8
      tag_9
      jump	// in
    tag_8:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_parsed.sol":749:841  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
    tag_4:
      tag_10
      tag_11
      jump	// in
    tag_10:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_parsed.sol":1684:2728  function emitfunc(bytes memory DataSent) public {... */
    tag_5:
      tag_12
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_13
      jumpi
      0x00
      dup1
      revert
    tag_13:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      0x0100000000
      dup2
      gt
      iszero
      tag_14
      jumpi
      0x00
      dup1
      revert
    tag_14:
      dup3
      add
      dup4
      0x20
      dup3
      add
      gt
      iszero
      tag_15
      jumpi
      0x00
      dup1
      revert
    tag_15:
      dup1
      calldataload
      swap1
      0x20
      add
      swap2
      dup5
      0x01
      dup4
      mul
      dup5
      add
      gt
      0x0100000000
      dup4
      gt
      or
      iszero
      tag_16
      jumpi
      0x00
      dup1
      revert
    tag_16:
      swap2
      swap1
      dup1
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
      dup1
      dup3
      dup5
      calldatacopy
      0x00
      dup2
      dup5
      add
      mstore
      not(0x1f)
      0x1f
      dup3
      add
      and
      swap1
      pop
      dup1
      dup4
      add
      swap3
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      tag_17
      jump	// in
    tag_12:
      stop
        /* "signaltest_parsed.sol":870:981  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_6:
      tag_18
      tag_19
      jump	// in
    tag_18:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_parsed.sol":1012:1138  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_7:
      tag_20
      tag_21
      jump	// in
    tag_20:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
    tag_9:
        /* "signaltest_parsed.sol":86:89  180 */
      0xb4
        /* "signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "signaltest_parsed.sol":749:841  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
    tag_11:
        /* "signaltest_parsed.sol":806:815  uint argc */
      0x00
        /* "signaltest_parsed.sol":833:834  0 */
      dup1
        /* "signaltest_parsed.sol":826:834  return 0 */
      swap1
      pop
        /* "signaltest_parsed.sol":749:841  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
      swap1
      jump	// out
        /* "signaltest_parsed.sol":1684:2728  function emitfunc(bytes memory DataSent) public {... */
    tag_17:
        /* "signaltest_parsed.sol":2025:2059  set_priceFeedUpdate_data(DataSent) */
      tag_24
        /* "signaltest_parsed.sol":2050:2058  DataSent */
      dup2
        /* "signaltest_parsed.sol":2025:2049  set_priceFeedUpdate_data */
      tag_25
        /* "signaltest_parsed.sol":2025:2059  set_priceFeedUpdate_data(DataSent) */
      jump	// in
    tag_24:
        /* "signaltest_parsed.sol":2103:2141  uint this_emitsig_priceFeedUpdate_argc */
      0x00
        /* "signaltest_parsed.sol":2144:2170  get_priceFeedUpdate_argc() */
      tag_26
        /* "signaltest_parsed.sol":2144:2168  get_priceFeedUpdate_argc */
      tag_11
        /* "signaltest_parsed.sol":2144:2170  get_priceFeedUpdate_argc() */
      jump	// in
    tag_26:
        /* "signaltest_parsed.sol":2103:2170  uint this_emitsig_priceFeedUpdate_argc = get_priceFeedUpdate_argc() */
      swap1
      pop
        /* "signaltest_parsed.sol":2203:2248  bytes32 this_emitsig_priceFeedUpdate_dataslot */
      0x00
        /* "signaltest_parsed.sol":2251:2281  get_priceFeedUpdate_dataslot() */
      tag_27
        /* "signaltest_parsed.sol":2251:2279  get_priceFeedUpdate_dataslot */
      tag_21
        /* "signaltest_parsed.sol":2251:2281  get_priceFeedUpdate_dataslot() */
      jump	// in
    tag_27:
        /* "signaltest_parsed.sol":2203:2281  bytes32 this_emitsig_priceFeedUpdate_dataslot = get_priceFeedUpdate_dataslot() */
      swap1
      pop
        /* "signaltest_parsed.sol":2315:2355  bytes32 this_emitsig_priceFeedUpdate_key */
      0x00
        /* "signaltest_parsed.sol":2358:2383  get_priceFeedUpdate_key() */
      tag_28
        /* "signaltest_parsed.sol":2358:2381  get_priceFeedUpdate_key */
      tag_19
        /* "signaltest_parsed.sol":2358:2383  get_priceFeedUpdate_key() */
      jump	// in
    tag_28:
        /* "signaltest_parsed.sol":2315:2383  bytes32 this_emitsig_priceFeedUpdate_key = get_priceFeedUpdate_key() */
      swap1
      pop
        /* "signaltest_parsed.sol":2572:2605  this_emitsig_priceFeedUpdate_argc */
      dup3
        /* "signaltest_parsed.sol":2533:2570  this_emitsig_priceFeedUpdate_dataslot */
      dup3
        /* "signaltest_parsed.sol":2530:2531  0 */
      0x00
        /* "signaltest_parsed.sol":2496:2528  this_emitsig_priceFeedUpdate_key */
      dup4
        /* "signaltest_parsed.sol":2488:2606  emitsig(this_emitsig_priceFeedUpdate_key, 0, this_emitsig_priceFeedUpdate_dataslot, this_emitsig_priceFeedUpdate_argc) */
      emitsig
        /* "signaltest_parsed.sol":2482:2486  0x40 */
      0x40
        /* "signaltest_parsed.sol":2475:2607  mstore(0x40, emitsig(this_emitsig_priceFeedUpdate_key, 0, this_emitsig_priceFeedUpdate_dataslot, this_emitsig_priceFeedUpdate_argc)) */
      mstore
        /* "signaltest_parsed.sol":2470:2614  {... */
      pop
      pop
      pop
      pop
      jump	// out
        /* "signaltest_parsed.sol":870:981  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_19:
        /* "signaltest_parsed.sol":926:937  bytes32 key */
      0x00
        /* "signaltest_parsed.sol":955:974  priceFeedUpdate_key */
      sload(0x04)
        /* "signaltest_parsed.sol":948:974  return priceFeedUpdate_key */
      swap1
      pop
        /* "signaltest_parsed.sol":870:981  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "signaltest_parsed.sol":1012:1138  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_21:
        /* "signaltest_parsed.sol":1073:1089  bytes32 dataslot */
      0x00
        /* "signaltest_parsed.sol":1107:1131  priceFeedUpdate_dataslot */
      sload(0x02)
        /* "signaltest_parsed.sol":1100:1131  return priceFeedUpdate_dataslot */
      swap1
      pop
        /* "signaltest_parsed.sol":1012:1138  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
      swap1
      jump	// out
        /* "signaltest_parsed.sol":606:716  function set_priceFeedUpdate_data(bytes memory dataSet) private {... */
    tag_25:
        /* "signaltest_parsed.sol":702:709  dataSet */
      dup1
        /* "signaltest_parsed.sol":679:699  priceFeedUpdate_data */
      0x01
        /* "signaltest_parsed.sol":679:709  priceFeedUpdate_data = dataSet */
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      tag_32
      swap3
      swap2
      swap1
      tag_33
      jump	// in
    tag_32:
      pop
        /* "signaltest_parsed.sol":606:716  function set_priceFeedUpdate_data(bytes memory dataSet) private {... */
      pop
      jump	// out
    tag_33:
      dup3
      dup1
      sload
      0x01
      dup2
      0x01
      and
      iszero
      0x0100
      mul
      sub
      and
      0x02
      swap1
      div
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      0x1f
      add
      0x20
      swap1
      div
      dup2
      add
      swap3
      dup3
      0x1f
      lt
      tag_35
      jumpi
      dup1
      mload
      not(0xff)
      and
      dup4
      dup1
      add
      or
      dup6
      sstore
      jump(tag_34)
    tag_35:
      dup3
      dup1
      add
      0x01
      add
      dup6
      sstore
      dup3
      iszero
      tag_34
      jumpi
      swap2
      dup3
      add
    tag_36:
      dup3
      dup2
      gt
      iszero
      tag_37
      jumpi
      dup3
      mload
      dup3
      sstore
      swap2
      0x20
      add
      swap2
      swap1
      0x01
      add
      swap1
      jump(tag_36)
    tag_37:
    tag_34:
      pop
      swap1
      pop
      tag_38
      swap2
      swap1
      tag_39
      jump	// in
    tag_38:
      pop
      swap1
      jump	// out
    tag_39:
      tag_40
      swap2
      swap1
    tag_41:
      dup1
      dup3
      gt
      iszero
      tag_42
      jumpi
      0x00
      dup2
      0x00
      swap1
      sstore
      pop
      0x01
      add
      jump(tag_41)
    tag_42:
      pop
      swap1
      jump
    tag_40:
      swap1
      jump	// out

    auxdata: 0xa2646970667358221220398604ba66c2d3aa2513ef4e62b88010524c616c416173e1fae6fa5d489448ec64736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
