    /* "basic/old_tests/signaltest/signaltest_parsed.sol":3892:6872  contract B {... */
  mstore(0x40, 0x80)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":6827:6870  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":6853:6867  priceReceive() */
  tag_4
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":6853:6865  priceReceive */
  shl(0x20, tag_5)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":6853:6867  priceReceive() */
  0x20
  shr
  jump	// in
tag_4:
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":3892:6872  contract B {... */
  jump(tag_6)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4538:4774  function priceReceive() private {... */
tag_5:
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4599:4637  keccak256("priceReceive_func(bytes3)") */
  mload(0x40)
  dup1
  dup1
  0x7072696365526563656976655f66756e63286279746573332900000000000000
  dup2
  mstore
  pop
  0x19
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4580:4596  priceReceive_key */
  0x02
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4580:4637  priceReceive_key = keccak256("priceReceive_func(bytes3)") */
  dup2
  swap1
  sstore
  pop
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4734:4755  priceReceive_key_slot */
  0x02
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4728:4756  sload(priceReceive_key_slot) */
  sload
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4721:4726  30000 */
  0x7530
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4717:4719  10 */
  0x0a
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4714:4715  3 */
  0x03
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4703:4757  createslot(3, 10, 30000, sload(priceReceive_key_slot)) */
  createslot
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4677:4701  priceReceive_status_slot */
  0x01
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4670:4758  sstore(priceReceive_status_slot, createslot(3, 10, 30000, sload(priceReceive_key_slot))) */
  sstore
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":4656:4768  {... */
  jump	// out
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":3892:6872  contract B {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":3892:6872  contract B {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x0f912881
      eq
      tag_3
      jumpi
      dup1
      0x165035e2
      eq
      tag_4
      jumpi
      dup1
      0x238227d9
      eq
      tag_5
      jumpi
      dup1
      0x395f9b8d
      eq
      tag_6
      jumpi
      dup1
      0x68c0b038
      eq
      tag_7
      jumpi
      dup1
      0x81b28b60
      eq
      tag_8
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5008:5106  function priceReceive_func(bytes3 obj) public {... */
    tag_3:
      tag_9
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_10
      jumpi
      0x00
      dup1
      revert
    tag_10:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_11
      jump	// in
    tag_9:
      stop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":3947:3982  uint public constant ONE_HOUR = 180 */
    tag_4:
      tag_12
      tag_13
      jump	// in
    tag_12:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":4336:4441  function get_priceReceive_key() public view returns (bytes32 key) {... */
    tag_5:
      tag_14
      tag_15
      jump	// in
    tag_14:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5109:5986  function bindfunc() public {... */
    tag_6:
      tag_16
      tag_17
      jump	// in
    tag_16:
      stop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":3914:3941  bytes3 public LocalPriceSum */
    tag_7:
      tag_18
      tag_19
      jump	// in
    tag_18:
      mload(0x40)
      dup1
      dup3
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5992:6826  function detachfunc() public {... */
    tag_8:
      tag_20
      tag_21
      jump	// in
    tag_20:
      stop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5008:5106  function priceReceive_func(bytes3 obj) public {... */
    tag_11:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5096:5099  obj */
      dup1
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5080:5093  LocalPriceSum */
      0x00
      0x14
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xe8
      shl
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5080:5099  LocalPriceSum | obj */
      or
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5064:5077  LocalPriceSum */
      0x00
      0x14
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5064:5099  LocalPriceSum = LocalPriceSum | obj */
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffff
      mul
      not
      and
      swap1
      dup4
      0xe8
      shr
      mul
      or
      swap1
      sstore
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5008:5106  function priceReceive_func(bytes3 obj) public {... */
      pop
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":3947:3982  uint public constant ONE_HOUR = 180 */
    tag_13:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":3979:3982  180 */
      0xb4
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":3947:3982  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":4336:4441  function get_priceReceive_key() public view returns (bytes32 key) {... */
    tag_15:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":4389:4400  bytes32 key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":4418:4434  priceReceive_key */
      sload(0x02)
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":4411:4434  return priceReceive_key */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":4336:4441  function get_priceReceive_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5109:5986  function bindfunc() public {... */
    tag_17:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5397:5425  address dut_bindslot_address */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5436:5439  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5397:5440  address dut_bindslot_address = address(dut) */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5492:5532  bytes32 dut_bindslot_priceFeedUpdate_key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5535:5565  keccak256("priceFeedUpdate()") */
      mload(0x40)
      dup1
      dup1
      0x7072696365466565645570646174652829000000000000000000000000000000
      dup2
      mstore
      pop
      0x11
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5492:5565  bytes32 dut_bindslot_priceFeedUpdate_key = keccak256("priceFeedUpdate()") */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5622:5664  bytes32 this_dut_bindslot_priceReceive_key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5667:5689  get_priceReceive_key() */
      tag_25
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5667:5687  get_priceReceive_key */
      tag_15
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5667:5689  get_priceReceive_key() */
      jump	// in
    tag_25:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5622:5689  bytes32 this_dut_bindslot_priceReceive_key = get_priceReceive_key() */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5832:5866  this_dut_bindslot_priceReceive_key */
      dup1
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5798:5830  dut_bindslot_priceFeedUpdate_key */
      dup3
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5776:5796  dut_bindslot_address */
      dup5
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5767:5867  bindslot(dut_bindslot_address, dut_bindslot_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key) */
      bindslot
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5761:5765  0x40 */
      0x40
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5754:5868  mstore(0x40, bindslot(dut_bindslot_address, dut_bindslot_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key)) */
      mstore
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5749:5875  {... */
      pop
      pop
      pop
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":3914:3941  bytes3 public LocalPriceSum */
    tag_19:
      0x00
      0x14
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xe8
      shl
      dup2
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":5992:6826  function detachfunc() public {... */
    tag_21:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6289:6327  bytes32 dut_detach_priceFeedUpdate_key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6330:6360  keccak256("priceFeedUpdate()") */
      mload(0x40)
      dup1
      dup1
      0x7072696365466565645570646174652829000000000000000000000000000000
      dup2
      mstore
      pop
      0x11
      add
      swap1
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6289:6360  bytes32 dut_detach_priceFeedUpdate_key = keccak256("priceFeedUpdate()") */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6391:6417  address dut_detach_address */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6428:6431  dut */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6391:6432  address dut_detach_address = address(dut) */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6469:6511  bytes32 this_dut_bindslot_priceReceive_key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6514:6536  get_priceReceive_key() */
      tag_27
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6514:6534  get_priceReceive_key */
      tag_15
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6514:6536  get_priceReceive_key() */
      jump	// in
    tag_27:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6469:6536  bytes32 this_dut_bindslot_priceReceive_key = get_priceReceive_key() */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6672:6706  this_dut_bindslot_priceReceive_key */
      dup1
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6640:6670  dut_detach_priceFeedUpdate_key */
      dup4
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6620:6638  dut_detach_address */
      dup4
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6609:6707  detachslot(dut_detach_address, dut_detach_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key) */
      detachslot
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6603:6607  0x40 */
      0x40
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6596:6708  mstore(0x40, detachslot(dut_detach_address, dut_detach_priceFeedUpdate_key, this_dut_bindslot_priceReceive_key)) */
      mstore
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":6591:6712  {... */
      pop
      pop
      pop
      jump	// out

    auxdata: 0xa26469706673582212209677b42e8297cece919fc4cb844cac2c5f093d411b914e28ef7dcc552b682ff364736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
