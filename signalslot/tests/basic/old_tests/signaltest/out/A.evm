    /* "basic/old_tests/signaltest/signaltest_parsed.sol":25:2767  contract A {... */
  mstore(0x40, 0x80)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":2719:2765  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":2745:2762  priceFeedUpdate() */
  tag_4
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":2745:2760  priceFeedUpdate */
  shl(0x20, tag_5)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":2745:2762  priceFeedUpdate() */
  0x20
  shr
  jump	// in
tag_4:
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":25:2767  contract A {... */
  jump(tag_6)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1296:1571  function priceFeedUpdate() private {... */
tag_5:
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1363:1393  keccak256("priceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x7072696365466565645570646174652829000000000000000000000000000000
  dup2
  mstore
  pop
  0x11
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1341:1360  priceFeedUpdate_key */
  0x04
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1341:1393  priceFeedUpdate_key = keccak256("priceFeedUpdate()") */
  dup2
  swap1
  sstore
  pop
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1466:1490  priceFeedUpdate_key_slot */
  0x04
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1460:1491  sload(priceFeedUpdate_key_slot) */
  sload
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1457:1458  1 */
  0x01
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1447:1492  createsig(1, sload(priceFeedUpdate_key_slot)) */
  createsig
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1418:1445  priceFeedUpdate_status_slot */
  0x03
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1411:1493  sstore(priceFeedUpdate_status_slot, createsig(1, sload(priceFeedUpdate_key_slot))) */
  sstore
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1535:1560  priceFeedUpdate_data_slot */
  0x01
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1504:1533  priceFeedUpdate_dataslot_slot */
  0x02
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1497:1561  sstore(priceFeedUpdate_dataslot_slot, priceFeedUpdate_data_slot) */
  sstore
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1406:1565  {... */
  jump	// out
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":25:2767  contract A {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":25:2767  contract A {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x3e4fe9a4
      eq
      tag_4
      jumpi
      dup1
      0xbab3affe
      eq
      tag_5
      jumpi
      dup1
      0xdf48d06a
      eq
      tag_6
      jumpi
      dup1
      0xfd5e127c
      eq
      tag_7
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_8
      tag_9
      jump	// in
    tag_8:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":745:837  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
    tag_4:
      tag_10
      tag_11
      jump	// in
    tag_10:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":866:977  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_5:
      tag_12
      tag_13
      jump	// in
    tag_12:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1680:2718  function emitfunc(bytes3 DataSent) public {... */
    tag_6:
      tag_14
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_15
      jumpi
      0x00
      dup1
      revert
    tag_15:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_16
      jump	// in
    tag_14:
      stop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1008:1134  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_7:
      tag_17
      tag_18
      jump	// in
    tag_17:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
    tag_9:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":86:89  180 */
      0xb4
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":745:837  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
    tag_11:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":802:811  uint argc */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":829:830  1 */
      0x01
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":822:830  return 1 */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":745:837  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
      swap1
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":866:977  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_13:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":922:933  bytes32 key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":951:970  priceFeedUpdate_key */
      sload(0x04)
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":944:970  return priceFeedUpdate_key */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":866:977  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1680:2718  function emitfunc(bytes3 DataSent) public {... */
    tag_16:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2015:2049  set_priceFeedUpdate_data(DataSent) */
      tag_22
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2040:2048  DataSent */
      dup2
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2015:2039  set_priceFeedUpdate_data */
      tag_23
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2015:2049  set_priceFeedUpdate_data(DataSent) */
      jump	// in
    tag_22:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2093:2131  uint this_emitsig_priceFeedUpdate_argc */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2134:2160  get_priceFeedUpdate_argc() */
      tag_24
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2134:2158  get_priceFeedUpdate_argc */
      tag_11
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2134:2160  get_priceFeedUpdate_argc() */
      jump	// in
    tag_24:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2093:2160  uint this_emitsig_priceFeedUpdate_argc = get_priceFeedUpdate_argc() */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2193:2238  bytes32 this_emitsig_priceFeedUpdate_dataslot */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2241:2271  get_priceFeedUpdate_dataslot() */
      tag_25
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2241:2269  get_priceFeedUpdate_dataslot */
      tag_18
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2241:2271  get_priceFeedUpdate_dataslot() */
      jump	// in
    tag_25:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2193:2271  bytes32 this_emitsig_priceFeedUpdate_dataslot = get_priceFeedUpdate_dataslot() */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2305:2345  bytes32 this_emitsig_priceFeedUpdate_key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2348:2373  get_priceFeedUpdate_key() */
      tag_26
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2348:2371  get_priceFeedUpdate_key */
      tag_13
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2348:2373  get_priceFeedUpdate_key() */
      jump	// in
    tag_26:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2305:2373  bytes32 this_emitsig_priceFeedUpdate_key = get_priceFeedUpdate_key() */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2562:2595  this_emitsig_priceFeedUpdate_argc */
      dup3
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2523:2560  this_emitsig_priceFeedUpdate_dataslot */
      dup3
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2520:2521  0 */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2486:2518  this_emitsig_priceFeedUpdate_key */
      dup4
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2478:2596  emitsig(this_emitsig_priceFeedUpdate_key, 0, this_emitsig_priceFeedUpdate_dataslot, this_emitsig_priceFeedUpdate_argc) */
      emitsig
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2472:2476  0x40 */
      0x40
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2465:2597  mstore(0x40, emitsig(this_emitsig_priceFeedUpdate_key, 0, this_emitsig_priceFeedUpdate_dataslot, this_emitsig_priceFeedUpdate_argc)) */
      mstore
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2460:2604  {... */
      pop
      pop
      pop
      pop
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1008:1134  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_18:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1069:1085  bytes32 dataslot */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1103:1127  priceFeedUpdate_dataslot */
      sload(0x02)
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1096:1127  return priceFeedUpdate_dataslot */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1008:1134  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
      swap1
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":607:712  function set_priceFeedUpdate_data(bytes3  dataSet) private {... */
    tag_23:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":698:705  dataSet */
      dup1
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":675:695  priceFeedUpdate_data */
      0x01
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":675:705  priceFeedUpdate_data = dataSet */
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffff
      mul
      not
      and
      swap1
      dup4
      0xe8
      shr
      mul
      or
      swap1
      sstore
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":607:712  function set_priceFeedUpdate_data(bytes3  dataSet) private {... */
      pop
      jump	// out

    auxdata: 0xa2646970667358221220475e65bbcb3a39edd10bd7d4eefbe388a5f6b9d25c91ad335273b63e821ee0a564736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
