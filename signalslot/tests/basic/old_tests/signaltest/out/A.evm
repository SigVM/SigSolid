    /* "basic/old_tests/signaltest/signaltest_parsed.sol":25:2777  contract A {... */
  mstore(0x40, 0x80)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":2729:2775  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":2755:2772  priceFeedUpdate() */
  tag_4
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":2755:2770  priceFeedUpdate */
  shl(0x20, tag_5)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":2755:2772  priceFeedUpdate() */
  0x20
  shr
  jump	// in
tag_4:
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":25:2777  contract A {... */
  jump(tag_6)
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1300:1575  function priceFeedUpdate() private {... */
tag_5:
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1367:1397  keccak256("priceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x7072696365466565645570646174652829000000000000000000000000000000
  dup2
  mstore
  pop
  0x11
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1345:1364  priceFeedUpdate_key */
  0x04
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1345:1397  priceFeedUpdate_key = keccak256("priceFeedUpdate()") */
  dup2
  swap1
  sstore
  pop
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1470:1494  priceFeedUpdate_key_slot */
  0x04
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1464:1495  sload(priceFeedUpdate_key_slot) */
  sload
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1461:1462  1 */
  0x01
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1451:1496  createsig(1, sload(priceFeedUpdate_key_slot)) */
  createsig
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1422:1449  priceFeedUpdate_status_slot */
  0x03
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1415:1497  sstore(priceFeedUpdate_status_slot, createsig(1, sload(priceFeedUpdate_key_slot))) */
  sstore
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1539:1564  priceFeedUpdate_data_slot */
  0x01
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1508:1537  priceFeedUpdate_dataslot_slot */
  0x02
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1501:1565  sstore(priceFeedUpdate_dataslot_slot, priceFeedUpdate_data_slot) */
  sstore
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":1410:1569  {... */
  jump	// out
    /* "basic/old_tests/signaltest/signaltest_parsed.sol":25:2777  contract A {... */
tag_6:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":25:2777  contract A {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x644695be
      eq
      tag_4
      jumpi
      dup1
      0xbab3affe
      eq
      tag_5
      jumpi
      dup1
      0xdf48d06a
      eq
      tag_6
      jumpi
      dup1
      0xfd5e127c
      eq
      tag_7
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_8
      tag_9
      jump	// in
    tag_8:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":745:841  function get_priceFeedUpdate_is_fix() public pure returns (uint is_fix) {... */
    tag_4:
      tag_10
      tag_11
      jump	// in
    tag_10:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":870:981  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_5:
      tag_12
      tag_13
      jump	// in
    tag_12:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1684:2728  function emitfunc(bytes3 DataSent) public {... */
    tag_6:
      tag_14
      0x04
      dup1
      calldatasize
      sub
      0x20
      dup2
      lt
      iszero
      tag_15
      jumpi
      0x00
      dup1
      revert
    tag_15:
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_16
      jump	// in
    tag_14:
      stop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1012:1138  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_7:
      tag_17
      tag_18
      jump	// in
    tag_17:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
    tag_9:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":86:89  180 */
      0xb4
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":54:89  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":745:841  function get_priceFeedUpdate_is_fix() public pure returns (uint is_fix) {... */
    tag_11:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":804:815  uint is_fix */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":833:834  1 */
      0x01
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":826:834  return 1 */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":745:841  function get_priceFeedUpdate_is_fix() public pure returns (uint is_fix) {... */
      swap1
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":870:981  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_13:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":926:937  bytes32 key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":955:974  priceFeedUpdate_key */
      sload(0x04)
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":948:974  return priceFeedUpdate_key */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":870:981  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1684:2728  function emitfunc(bytes3 DataSent) public {... */
    tag_16:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2019:2053  set_priceFeedUpdate_data(DataSent) */
      tag_22
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2044:2052  DataSent */
      dup2
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2019:2043  set_priceFeedUpdate_data */
      tag_23
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2019:2053  set_priceFeedUpdate_data(DataSent) */
      jump	// in
    tag_22:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2097:2137  uint this_emitsig_priceFeedUpdate_is_fix */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2140:2168  get_priceFeedUpdate_is_fix() */
      tag_24
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2140:2166  get_priceFeedUpdate_is_fix */
      tag_11
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2140:2168  get_priceFeedUpdate_is_fix() */
      jump	// in
    tag_24:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2097:2168  uint this_emitsig_priceFeedUpdate_is_fix = get_priceFeedUpdate_is_fix() */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2201:2246  bytes32 this_emitsig_priceFeedUpdate_dataslot */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2249:2279  get_priceFeedUpdate_dataslot() */
      tag_25
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2249:2277  get_priceFeedUpdate_dataslot */
      tag_18
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2249:2279  get_priceFeedUpdate_dataslot() */
      jump	// in
    tag_25:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2201:2279  bytes32 this_emitsig_priceFeedUpdate_dataslot = get_priceFeedUpdate_dataslot() */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2313:2353  bytes32 this_emitsig_priceFeedUpdate_key */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2356:2381  get_priceFeedUpdate_key() */
      tag_26
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2356:2379  get_priceFeedUpdate_key */
      tag_13
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2356:2381  get_priceFeedUpdate_key() */
      jump	// in
    tag_26:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2313:2381  bytes32 this_emitsig_priceFeedUpdate_key = get_priceFeedUpdate_key() */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2570:2605  this_emitsig_priceFeedUpdate_is_fix */
      dup3
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2531:2568  this_emitsig_priceFeedUpdate_dataslot */
      dup3
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2528:2529  0 */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2494:2526  this_emitsig_priceFeedUpdate_key */
      dup4
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2486:2606  emitsig(this_emitsig_priceFeedUpdate_key, 0, this_emitsig_priceFeedUpdate_dataslot, this_emitsig_priceFeedUpdate_is_fix) */
      emitsig
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2480:2484  0x40 */
      0x40
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2473:2607  mstore(0x40, emitsig(this_emitsig_priceFeedUpdate_key, 0, this_emitsig_priceFeedUpdate_dataslot, this_emitsig_priceFeedUpdate_is_fix)) */
      mstore
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":2468:2614  {... */
      pop
      pop
      pop
      pop
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1012:1138  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_18:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1073:1089  bytes32 dataslot */
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1107:1131  priceFeedUpdate_dataslot */
      sload(0x02)
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1100:1131  return priceFeedUpdate_dataslot */
      swap1
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":1012:1138  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
      swap1
      jump	// out
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":607:712  function set_priceFeedUpdate_data(bytes3  dataSet) private {... */
    tag_23:
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":698:705  dataSet */
      dup1
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":675:695  priceFeedUpdate_data */
      0x01
      0x00
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":675:705  priceFeedUpdate_data = dataSet */
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffff
      mul
      not
      and
      swap1
      dup4
      0xe8
      shr
      mul
      or
      swap1
      sstore
      pop
        /* "basic/old_tests/signaltest/signaltest_parsed.sol":607:712  function set_priceFeedUpdate_data(bytes3  dataSet) private {... */
      pop
      jump	// out

    auxdata: 0xa264697066735822122093516f383842d861b1613c711918fc410f232ed4b7a5b989102366aa44e76bf664736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
