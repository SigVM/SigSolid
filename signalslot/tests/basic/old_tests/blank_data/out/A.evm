    /* "basic/old_tests/blank_data/blank_data_parsed.sol":24:2532  contract A {... */
  mstore(0x40, 0x80)
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":2462:2530  constructor() public {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":2488:2505  priceFeedUpdate() */
  tag_4
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":2488:2503  priceFeedUpdate */
  shl(0x20, tag_5)
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":2488:2505  priceFeedUpdate() */
  0x20
  shr
  jump	// in
tag_4:
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":2509:2526  priceFeedUpdate() */
  tag_6
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":2509:2524  priceFeedUpdate */
  shl(0x20, tag_5)
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":2509:2526  priceFeedUpdate() */
  0x20
  shr
  jump	// in
tag_6:
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":24:2532  contract A {... */
  jump(tag_7)
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1285:1561  function priceFeedUpdate() private {... */
tag_5:
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1352:1382  keccak256("priceFeedUpdate()") */
  mload(0x40)
  dup1
  dup1
  0x7072696365466565645570646174652829000000000000000000000000000000
  dup2
  mstore
  pop
  0x11
  add
  swap1
  pop
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  keccak256
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1330:1349  priceFeedUpdate_key */
  0x03
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1330:1382  priceFeedUpdate_key = keccak256("priceFeedUpdate()") */
  dup2
  swap1
  sstore
  pop
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1456:1480  priceFeedUpdate_key_slot */
  0x03
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1450:1481  sload(priceFeedUpdate_key_slot) */
  sload
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1446:1448  32 */
  0x20
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1436:1482  createsig(32, sload(priceFeedUpdate_key_slot)) */
  createsig
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1407:1434  priceFeedUpdate_status_slot */
  0x02
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1400:1483  sstore(priceFeedUpdate_status_slot, createsig(32, sload(priceFeedUpdate_key_slot))) */
  sstore
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1525:1550  priceFeedUpdate_data_slot */
  0x00
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1494:1523  priceFeedUpdate_dataslot_slot */
  0x01
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1487:1551  sstore(priceFeedUpdate_dataslot_slot, priceFeedUpdate_data_slot) */
  sstore
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":1395:1555  {... */
  jump	// out
    /* "basic/old_tests/blank_data/blank_data_parsed.sol":24:2532  contract A {... */
tag_7:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":24:2532  contract A {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x165035e2
      eq
      tag_3
      jumpi
      dup1
      0x3e4fe9a4
      eq
      tag_4
      jumpi
      dup1
      0xa0a25d6b
      eq
      tag_5
      jumpi
      dup1
      0xbab3affe
      eq
      tag_6
      jumpi
      dup1
      0xfd5e127c
      eq
      tag_7
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":41:76  uint public constant ONE_HOUR = 180 */
    tag_3:
      tag_8
      tag_9
      jump	// in
    tag_8:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":733:826  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
    tag_4:
      tag_10
      tag_11
      jump	// in
    tag_10:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":1670:2460  function emitfunc() public {... */
    tag_5:
      tag_12
      tag_13
      jump	// in
    tag_12:
      stop
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":855:966  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_6:
      tag_14
      tag_15
      jump	// in
    tag_14:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":997:1123  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_7:
      tag_16
      tag_17
      jump	// in
    tag_16:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":41:76  uint public constant ONE_HOUR = 180 */
    tag_9:
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":73:76  180 */
      0xb4
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":41:76  uint public constant ONE_HOUR = 180 */
      dup2
      jump	// out
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":733:826  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
    tag_11:
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":790:799  uint argc */
      0x00
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":817:819  32 */
      0x20
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":810:819  return 32 */
      swap1
      pop
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":733:826  function get_priceFeedUpdate_argc() public pure returns (uint argc) {... */
      swap1
      jump	// out
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":1670:2460  function emitfunc() public {... */
    tag_13:
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":1960:2005  bytes32 this_emitsig_priceFeedUpdate_dataslot */
      0x00
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2008:2038  get_priceFeedUpdate_dataslot() */
      tag_20
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2008:2036  get_priceFeedUpdate_dataslot */
      tag_17
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2008:2038  get_priceFeedUpdate_dataslot() */
      jump	// in
    tag_20:
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":1960:2038  bytes32 this_emitsig_priceFeedUpdate_dataslot = get_priceFeedUpdate_dataslot() */
      swap1
      pop
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2072:2112  bytes32 this_emitsig_priceFeedUpdate_key */
      0x00
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2115:2140  get_priceFeedUpdate_key() */
      tag_21
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2115:2138  get_priceFeedUpdate_key */
      tag_15
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2115:2140  get_priceFeedUpdate_key() */
      jump	// in
    tag_21:
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2072:2140  bytes32 this_emitsig_priceFeedUpdate_key = get_priceFeedUpdate_key() */
      swap1
      pop
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2336:2337  0 */
      0x00
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2297:2334  this_emitsig_priceFeedUpdate_dataslot */
      dup3
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2287:2295  ONE_HOUR */
      0xb4
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2253:2285  this_emitsig_priceFeedUpdate_key */
      dup4
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2245:2338  emitsig(this_emitsig_priceFeedUpdate_key, ONE_HOUR, this_emitsig_priceFeedUpdate_dataslot, 0) */
      emitsig
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2239:2243  0x40 */
      0x40
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2232:2339  mstore(0x40, emitsig(this_emitsig_priceFeedUpdate_key, ONE_HOUR, this_emitsig_priceFeedUpdate_dataslot, 0)) */
      mstore
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":2227:2346  {... */
      pop
      pop
      jump	// out
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":855:966  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
    tag_15:
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":911:922  bytes32 key */
      0x00
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":940:959  priceFeedUpdate_key */
      sload(0x03)
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":933:959  return priceFeedUpdate_key */
      swap1
      pop
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":855:966  function get_priceFeedUpdate_key() public view returns (bytes32 key) {... */
      swap1
      jump	// out
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":997:1123  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
    tag_17:
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":1058:1074  bytes32 dataslot */
      0x00
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":1092:1116  priceFeedUpdate_dataslot */
      sload(0x01)
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":1085:1116  return priceFeedUpdate_dataslot */
      swap1
      pop
        /* "basic/old_tests/blank_data/blank_data_parsed.sol":997:1123  function get_priceFeedUpdate_dataslot() public view returns (bytes32 dataslot) {... */
      swap1
      jump	// out

    auxdata: 0xa2646970667358221220f86e03e89ad477fc7ae89359142cdf7ec622a89254d49be7d6d66ce88cb6698464736f6c63782c302e362e31312d646576656c6f702e323032302e372e32322b636f6d6d69742e36646666643637632e6d6f64005d
}
